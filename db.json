{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1576223516181},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1576223516181},{"_id":"themes/next/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1576223516184},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1576223516181},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1576223516184},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1576223516185},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1576223516185},{"_id":"themes/next/README.md","hash":"dc026053a4d9fb97a58dbc3e9060e480f6852b23","modified":1576223516186},{"_id":"themes/next/package.json","hash":"61aa2ac422e92ad435d1bfedea8d41824f5fe85e","modified":1576223516208},{"_id":"themes/next/gulpfile.js","hash":"72e6d5a6e32d5f95d82e4c4d0c963d39555bb760","modified":1576223516192},{"_id":"source/CNAME","hash":"39cfa2568e3c40a28db7cc73c85cce059f39ef90","modified":1576234736190},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1576223516187},{"_id":"themes/next/_config.yml","hash":"e5a6d17a2e64d3842cb20fe5d50d3f44b69d852c","modified":1576233281295},{"_id":"source/_posts/Raven相关研究.md","hash":"b0052456d9a1d36dc9aef0e46cda1418ccfd000e","modified":1576233311446},{"_id":"source/about/index.md","hash":"b23386b916f5d3a39072bc5d861a7967ea110a39","modified":1576231717967},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1576217586851},{"_id":"source/_posts/framework.md","hash":"44b627cb339e85ed024fd3e0042a3a260110c498","modified":1576223019342},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1576223516182},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ef63f34bd3b6bd4d7304d48ce5e0e3e2bead385","modified":1576223516182},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"715dcf9b0429a4a4c7107d6d1d00a34e4cf9aa99","modified":1576223516183},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1576223516183},{"_id":"themes/next/.github/config.yml","hash":"e4f4b9afe59bc508c4f7634895b33d7d460a7cb1","modified":1576223516183},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1576223516184},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1576223516183},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1576223516184},{"_id":"themes/next/.github/stale.yml","hash":"941209526c2f7d916c76163c9e1ac1af9d956679","modified":1576223516184},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1576223516184},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1576223516188},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1576223516189},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"5b4c013e0598b3211ebd899265936cfdaf7c139f","modified":1576223516188},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1576223516190},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"08cda41b4bcf687facfda19ab39718ec7a05ae54","modified":1576223516189},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1576223516189},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"682937d48bf5d243842a76190921322e26c75247","modified":1576223516190},{"_id":"themes/next/docs/MATH.md","hash":"f520b336f16665e164d6edf075bdcc6aa17b31bc","modified":1576223516190},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1576223516213},{"_id":"themes/next/docs/DATA-FILES.md","hash":"d0d46cb265f0efceffce82214cd36d8b82ddce13","modified":1576223516189},{"_id":"themes/next/layout/archive.swig","hash":"26526c09a4334099e2141456697696fcd1f9783f","modified":1576223516207},{"_id":"themes/next/layout/category.swig","hash":"c55debb2588e4746b02d31ec249bf0a84fdea260","modified":1576223516207},{"_id":"themes/next/layout/index.swig","hash":"3bc6fb1e9707d74b96e1346d3f03fe6584f764f4","modified":1576223516208},{"_id":"themes/next/layout/_layout.swig","hash":"29ee038b0d5ffdb45327598733ea968588367769","modified":1576223516196},{"_id":"themes/next/layout/tag.swig","hash":"7ff6e34d557a3da1c6a29ecd97842bf73ff213dc","modified":1576223516208},{"_id":"themes/next/languages/de.yml","hash":"285b294b1dd2ce49b0694beb4fd75ed05dc20ccb","modified":1576223516192},{"_id":"themes/next/layout/page.swig","hash":"e61d64c055b6497a04affc143f47fdd0a6dc495b","modified":1576223516208},{"_id":"themes/next/languages/en.yml","hash":"89eb0cff04435307e4eccb0d72a653499627d02d","modified":1576223516193},{"_id":"themes/next/layout/post.swig","hash":"382d9f9a9b35e1f369585f7f9f9b5dd6fa58d2f0","modified":1576223516208},{"_id":"themes/next/languages/default.yml","hash":"89eb0cff04435307e4eccb0d72a653499627d02d","modified":1576223516193},{"_id":"themes/next/languages/es.yml","hash":"3bd0977225a9b9dc3cdc856161b3a77e5993ac4a","modified":1576223516193},{"_id":"themes/next/languages/id.yml","hash":"80c3db4c2dbbea0703f6c8f1191218f692899507","modified":1576223516193},{"_id":"themes/next/languages/fr.yml","hash":"5fe560d14824c71ea90b2a76d0c17b2332b9d08a","modified":1576223516193},{"_id":"themes/next/languages/hu.yml","hash":"dd9e4cd2873ed9a9ae7cb89962eeff911de396b4","modified":1576223516193},{"_id":"themes/next/languages/fa.yml","hash":"35468531ad0236df5b188f28bd1b4bb0c0537faf","modified":1576223516193},{"_id":"themes/next/languages/it.yml","hash":"68ac5a0aa361210f51915e101c842ed1c9464889","modified":1576223516194},{"_id":"themes/next/languages/ko.yml","hash":"14a162509dc71bb364335c20281d3bccbd2a51f3","modified":1576223516194},{"_id":"themes/next/languages/nl.yml","hash":"4d9b09aff03648cbbbfeb0c51a2d1214320b5ec6","modified":1576223516194},{"_id":"themes/next/languages/ja.yml","hash":"e61529ddf80426a5362ed07642216027615bd740","modified":1576223516194},{"_id":"themes/next/languages/pt-BR.yml","hash":"024dcdeb30c93e57cd1ba4cd707f8988dcad2468","modified":1576223516194},{"_id":"themes/next/languages/ru.yml","hash":"f7d5efd6289845f2375bbee8fe883813de745767","modified":1576223516194},{"_id":"themes/next/languages/tr.yml","hash":"e08d8d6ee9507a7c7d4450bc1c76b435470a3739","modified":1576223516195},{"_id":"themes/next/languages/pt.yml","hash":"88fb58e537a949c013a2adcdaebcbe09543c0bd2","modified":1576223516194},{"_id":"themes/next/languages/vi.yml","hash":"0c0890ccffcb5cca0893de63ebad66e3ce740707","modified":1576223516195},{"_id":"themes/next/languages/zh-CN.yml","hash":"4b36a51556e87d236c6ac6ee6975de1beb95724c","modified":1576223516195},{"_id":"themes/next/languages/uk.yml","hash":"e58393cf726401bf50a772392e23507d9e11049e","modified":1576223516195},{"_id":"themes/next/languages/zh-TW.yml","hash":"5e395cb492a0b6284f8d2ffdd93f7380db31486f","modified":1576223516195},{"_id":"themes/next/languages/zh-HK.yml","hash":"6d83daf9df1811e3ae6cde5ad778c888d8027b13","modified":1576223516195},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"5e55946ee51cf5b20f5a77510a2ea16c26e40642","modified":1576223516182},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"a5c007b5aa6007cb6cd4a669cf3b59c3e6628fc1","modified":1576223516183},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"ddc1f18952151f3c90f3b9043f2c5dddda857af2","modified":1576223516182},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"c9bb152643af4692af65b93c4a00690e61131c89","modified":1576223516183},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"fe3f5cda1975114884d84bef384a562920d70335","modified":1576223516190},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"2665f6a9d72090f9452a8811544ff2596e8899be","modified":1576223516190},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"4245fe9472647226692fcbdd5a52d6e6dcd251bc","modified":1576223516191},{"_id":"themes/next/docs/ru/README.md","hash":"41b1bef32fb991410ebf559b4c45022549f95215","modified":1576223516190},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1576223516191},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"3b4dbf0d2ca12ab442b7e0e227769ce100b8a444","modified":1576223516191},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1576223516191},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"0b0b9ec6ec4a89e701a3b91f8d7d95752d3e241b","modified":1576223516192},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1576223516190},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"17d7203e85a8ce9760c42a853dee0f26a8f7ee4e","modified":1576223516191},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"7f37327bbcae7ed7d04d187fd5e9bc6bbf14926a","modified":1576223516192},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"f0ffb74de522749c9f2fda46970a61bdafbfbc24","modified":1576223516192},{"_id":"themes/next/docs/zh-CN/README.md","hash":"b6a3611d40863c12804c5846994786119ce3b79f","modified":1576223516192},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1576223516211},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1576223516211},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1576223516212},{"_id":"themes/next/scripts/filters/post.js","hash":"5e5035372b3d94a65309334c93303c858e072012","modified":1576223516212},{"_id":"themes/next/scripts/filters/locals.js","hash":"5bbfdc1c373542159660b7a68ed0b57ca18ad10b","modified":1576223516212},{"_id":"themes/next/scripts/helpers/engine.js","hash":"c8c8afde59df587f883dd9b47a3c629042bc4c6e","modified":1576223516212},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"58347687b02f7ab5e64bef07525c8efa97c9e8fb","modified":1576223516213},{"_id":"themes/next/scripts/tags/button.js","hash":"1d1d25f7e579d92fa563778dd0f163e8eda190da","modified":1576223516213},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1576223516214},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"20e392b8583ba6ae5037449c2c7e191d3927641b","modified":1576223516213},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1576223516214},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1576223516214},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1576223516214},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1576223516214},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1576223516214},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1576223516215},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1576223516215},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"e2c9db54cc9e154e882008fde6588b065fadc9a7","modified":1576223516196},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1576223516200},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1576223516200},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"815676d904f92748ddf4f529bed2baf066997bc6","modified":1576223516196},{"_id":"themes/next/layout/_macro/post.swig","hash":"049caf88e2cb8dde780b0c6196db984c7bc3a4cc","modified":1576223516196},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1576223516201},{"_id":"themes/next/layout/_partials/comments.swig","hash":"0c4914a5fd08f15beec71940218c814ad9a89f3f","modified":1576223516196},{"_id":"themes/next/layout/_partials/footer.swig","hash":"1ee6335c12773dc43f8b92136770cb10d460c25c","modified":1576223516196},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"9675acc599ffa546f05a60375c1637b0327be4fd","modified":1576223516200},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1576223516201},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1576223516198},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1576223516200},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1576223516202},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1576223516203},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"dd6bd817cb69b5ad5e9746498146314b54054ff8","modified":1576223516204},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"da6a9d14ed10203e378c6e2c00a7b5e7afabca58","modified":1576223516204},{"_id":"themes/next/scripts/events/index.js","hash":"9047d8ae2670e43429b16a7919a08a0a0a81afe0","modified":1576223516209},{"_id":"themes/next/scripts/helpers/font.js","hash":"32268fb4c59c5b37c1eb1c9582ab630e09e5cc7d","modified":1576223516213},{"_id":"themes/next/source/css/main.styl","hash":"68c3377b643162aeaae2b60c196486fdb3b509c3","modified":1576223516236},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1576223516237},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1576223516237},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1576223516238},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1576223516238},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1576223516238},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1576223516238},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1576223516238},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1576223516238},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1576223516239},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1576223516239},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1576223516239},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1576223516239},{"_id":"themes/next/source/js/algolia-search.js","hash":"813afcc30feee11d59f297f2d5a96f98fbbd4743","modified":1576223516239},{"_id":"themes/next/source/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1576223516240},{"_id":"themes/next/source/js/local-search.js","hash":"9f3d3ddff86e7b2828772aba915a5ebfd7d9f55f","modified":1576223516240},{"_id":"themes/next/source/js/next-boot.js","hash":"f7045763e277e685c271bd4b4c37e531d699ac63","modified":1576223516240},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1576223516237},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1576223516237},{"_id":"themes/next/source/js/motion.js","hash":"09f8be6bcc6920546bb06e3f8c0181ec62c70b90","modified":1576223516240},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1576223516239},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1576223516241},{"_id":"themes/next/source/js/utils.js","hash":"32ad2609c1d80a8d5180ec059d0eea0c6735d1f2","modified":1576223516241},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1576223516232},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1576223516232},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"1f20213af8da3127701e6bb9da995e5c91be2051","modified":1576223516210},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1576223516210},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"5ba0480c2dbb0626501c90c920be85ce2308103c","modified":1576223516210},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1576223516211},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1576223516210},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1576223516211},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"e24c4dd78f6e4adee0e7c15eb8bca12eb92452e4","modified":1576223516211},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1576223516211},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1576223516201},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1576223516200},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"1638483d2d2dad1da4c841a6fb9f6ee96b850187","modified":1576223516197},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1576223516201},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1576223516201},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"7487ca8f0e4b16351ea0d6b35dc52b0d32176d57","modified":1576223516197},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"0172055d118d1d7f4c8379c8495c1ee1aa50c7d9","modified":1576223516197},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"d5a5f45ef0b41332cad069d263df2c449e2f1e7e","modified":1576223516200},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"bbf0c8e42491fac70f4f8165224f1d7d92a040d7","modified":1576223516197},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"e6076865dba066c5f0008e22217efb850d5af69c","modified":1576223516197},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"30528a8da30994b1ef9355a72b09b2cd85a7c0e9","modified":1576223516197},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"a56e4f6ad95c106f361d354f828d1ef4810b1d76","modified":1576223516198},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"54ba9508a901c295a02c8e34e9cece7c7dcad518","modified":1576223516197},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1576223516198},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"94d54b0c65d504f772af1e62424952e092b6c21d","modified":1576223516198},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1576223516198},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1576223516198},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"78cb2077f50bc3b81130a516ffc04bc1fcea5834","modified":1576223516199},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"7fa01334a0ba84500e920bb9202baa08067d2ee1","modified":1576223516199},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"d6fa9e4432b87004c5678dfe2d4b2c1f4a702b93","modified":1576223516199},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"733d6874aa4f50d1071e670a554508a5a0094eb3","modified":1576223516199},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"716b78cd90addc4216413719554721cb362b0c18","modified":1576223516200},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1576223516201},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1576223516202},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1576223516201},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"fdcf006e1ba2e53eab65e901b6c63159538307ef","modified":1576223516202},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1576223516202},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1576223516202},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1576223516202},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1ef172bc041d6f6b6c8c642ea64496a188d79029","modified":1576223516203},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4d6f9e09ca4056ff6a5d4923e202126a75242183","modified":1576223516203},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"0992d51dff4b8f4f4e69834c8cd1604593536c5d","modified":1576223516203},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1576223516203},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"d3dc3e051e6816cdd576d00cc70b18b8a4c6a495","modified":1576223516203},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1576223516203},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"fb27a38f9a4b8fcba4f637b03904f7a83cc73416","modified":1576223516204},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"e456d7a2aaabe55447f78cd952b30d70a6c1e742","modified":1576223516205},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1576223516205},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1576223516204},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1576223516205},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1576223516206},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1576223516206},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"0ea0bac09b0747bc16fde852164c0eaab2efe02c","modified":1576223516206},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1576223516206},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"4a7207c6f9ab0e56ea8f59aca3ed4c2cb2fb7450","modified":1576223516206},{"_id":"themes/next/scripts/events/lib/config.js","hash":"b205d72a56b1827681f0a260c266e0c02065fd08","modified":1576223516209},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1576223516209},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1576223516209},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"4958fa997ff6df2b2ce05341f40cc3a81b0f91bb","modified":1576223516207},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"7fa72dc60c078842979861622839b109683e05a3","modified":1576223516207},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"644c1f0b02be9bf59955ebdf496136b3fa4b660b","modified":1576223516232},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1576223516231},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0a25f3df1b5c39794365efde387647da81da884a","modified":1576223516232},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"52550138127ae9ebbe049bcdacd94d767c003855","modified":1576223516236},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d4e817e2b238ace5d7ac568ce0c5380196a6d039","modified":1576223516236},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c261d685c5ed0df34718d94bb2ba977c0ed443e6","modified":1576223516236},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"50bc57e66331c0f15a4527010b4ca3316ac92403","modified":1576223516236},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"b9d7058db61df7bbd2b58779efe45621a06ffc18","modified":1576223516236},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1576223516242},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1576223516241},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1576223516242},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1576223516242},{"_id":"themes/next/source/js/schemes/muse.js","hash":"792f4522a3b0b96584a041a4aca20fcded410079","modified":1576223516240},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"52d139e6f3bc212c8c9b71bc9e57e931920434a6","modified":1576223516241},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1576223516242},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1576223516247},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1576223516247},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"47ee915d7b0a97e74140a25fbfc01c04d6781534","modified":1576223516216},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"112f5e8f1fe5cec4419e87acfbdef0e615ed23f3","modified":1576223516216},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"80d359661d08b80ad561b97f8508766b3e1f6d01","modified":1576223516215},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"170c4598cbbe49cd1527f94158d97d2320a6b906","modified":1576223516220},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4f7879a50d4608c46cc2061c725a2564597a45bd","modified":1576223516227},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"3faa8a7cdb05ef3f3b02920d381773dfd54270a5","modified":1576223516228},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1576223516229},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1576223516229},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"d8ba44b8e1a0332c5c1079ff65fc83d2918a5865","modified":1576223516228},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1576223516229},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"2b52b0eb4c66e06762cf115450da0ca1dd435e75","modified":1576223516230},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1576223516231},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"1693ec6b53758ac15d2c7798c789d6ae8af913ea","modified":1576223516232},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"4fb385d8533877678440c8faa08b68fa793cb1a2","modified":1576223516233},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"24a086a6904bbf5355a354403c9b0e6069f7eb01","modified":1576223516233},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"48743ac61af37a4de2026667e15a65de5e8cf542","modified":1576223516233},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1576223516234},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"3646e915b0a55f3b66e41d802b082aba88a76e06","modified":1576223516234},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c6905c694c6fbbf372b53456a0d219701010a110","modified":1576223516234},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"eeab294e14abbae231107e1a327e907b25323136","modified":1576223516234},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1576223516234},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1576223516234},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"f1f81bca31e82ccbd375f0cb9fb8dbb3beac810d","modified":1576223516235},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"f5abb2ea7746586738fb4e82107fceed041708ee","modified":1576223516235},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"71a3d7f2242706f7a6b79933a67ef3664cca3a24","modified":1576223516235},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d7587df06b30042091316d8b1cc58ba361211492","modified":1576223516235},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"0424a1fcffa1ae82fe70935972a894aca885bf9a","modified":1576223516235},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1576223516235},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"990bd301ce2de0a6b936781c58318f3945d81bc2","modified":1576223516224},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"41c7cd1b63d49476ed5fbdd26ab9411d8f44bd05","modified":1576223516219},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"44fe82eadbdbb2f66adda37ac83ebd0f85876bfc","modified":1576223516224},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e321bd62f5e04d1fdc101a470ec13604e99816a5","modified":1576223516233},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1576223516242},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1576223516234},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1576223516243},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1576223516243},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1576223516246},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"98227b4de364b48b11e21efcf4f1beb2ed3ab329","modified":1576223516217},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"e3ade812b5541eca5b863ad3ff234ea95925bf31","modified":1576223516217},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1576223516218},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"5d5c022aa3b2f89c2f2a178212338bb64804dd75","modified":1576223516218},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"4b84f35e7040f9adb5cc540c366d7f9eb4c48bcc","modified":1576223516217},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"bcba503e956e4b737b062faa66341bd880f16c10","modified":1576223516218},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"eca4d80dd0df1c3b1bc06bd39e6a4bd6c56198df","modified":1576223516218},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1576223516219},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"9df5ba77e6cf36129bddc270407215c23c60ff38","modified":1576223516218},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1576223516219},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"284249dcfa3b49c5d76210bbb0f74f65fc2f12ea","modified":1576223516219},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1576223516219},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1576223516216},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"6336c2b129db802221b1fd75e5fbe8aab85c0a1f","modified":1576223516217},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1576223516216},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1576223516217},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1576223516216},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1576223516220},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1576223516220},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1576223516221},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"2d9d68a431a334626d463bb1bdfbcd2ea8242e94","modified":1576223516221},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1576223516221},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1576223516228},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"b492a45422773ab2af06ee345d527ba4c6bbc608","modified":1576223516228},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"b4923515ca8e44aa62e839ce948f759cfd1f896f","modified":1576223516228},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1576223516229},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"7213e3d0ad7c95717ecd4e701d6ee9248ef2bf9f","modified":1576223516230},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"5bf28a03ef021c27cfd713971caca5a0b9466fd1","modified":1576223516230},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1576223516230},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"1a14c1b92d8a4dd8aabb5949333ac0ac79094c6c","modified":1576223516230},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"d2f0f2171722533bba308f944a2ec727b083582c","modified":1576223516231},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1576223516231},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"2dc2a5b7becb11de1d4bdab6b5195588ae878cfc","modified":1576223516231},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"f5821481440a0624c8aec5fc85f093de1527095f","modified":1576223516222},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1576223516222},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"0672ea2acf28dcc2cfc5244da36d3387d71a17cb","modified":1576223516223},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"a7ed54e2f52185a7b6bb9a8201f6c3aa74b0cb00","modified":1576223516223},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"4b237e2344f35e9d1f6dbc3842d5e432d478ebfd","modified":1576223516223},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1576223516223},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"d5d85d3646d184e0340924addcfd2523fb289d00","modified":1576223516223},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"c27b3056d5e22d3c66d8a152a23634314d5c4a60","modified":1576223516224},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1576223516224},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"a237c290e8934d1a8cbbf22b3f30503d9663021d","modified":1576223516226},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"9b3ff4aa24069eab0e9771437013f45e450d4217","modified":1576223516225},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"95339b71ac90553fb1634c536c9749055e0c788a","modified":1576223516225},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1576223516226},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"1db4ce981fe9fcb9ee4279395c29553efbb43947","modified":1576223516226},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1576223516227},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"e2ad7ccf1865a45548e3f31c70fac2c65d6ef534","modified":1576223516226},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"c83d750238d6ac13b65869a909465fe621c464c3","modified":1576223516227},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"9a18b186b08ec220d1b17cf83812bcdd06077814","modified":1576223516227},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1576223516246},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1576223516245},{"_id":"public/search.xml","hash":"d63f64a78c1785b58be30e6ddc8416807efedb85","modified":1576469873160},{"_id":"public/about/index.html","hash":"93e5a8b5e3d1461139b50c6a8b72bf6c5d0b7dd6","modified":1576469873160},{"_id":"public/2019/12/13/framework/index.html","hash":"627145b9460af81fa0e9d393341d8a25514339a8","modified":1576469873160},{"_id":"public/2019/12/13/hello-world/index.html","hash":"4bafd4af739fc8c6464865f6f150f99c1a620a36","modified":1576469873160},{"_id":"public/archives/index.html","hash":"1799d7cb9008fff1737cc230043753ffd4f70fa4","modified":1576469873160},{"_id":"public/archives/2019/index.html","hash":"763c325ea7ad7cdf97d102a69c5009e751885cd0","modified":1576469873160},{"_id":"public/archives/2019/12/index.html","hash":"14fcc29528adb8f43a3647cab4666cdbe7fc1962","modified":1576469873160},{"_id":"public/index.html","hash":"0086d4fa626871f6012c9cbf63fd40e230d9bd4b","modified":1576469873160},{"_id":"public/tags/blockchain/index.html","hash":"8912b756d14690e6309061646ea710a535373535","modified":1576469873160},{"_id":"public/tags/cryptocoin/index.html","hash":"e97bcc4914914f35e8c131d20a5d08170efc6e90","modified":1576469873160},{"_id":"public/2019/12/13/Raven相关研究/index.html","hash":"c9b48b4fe824cc40b102e3baf523b1de74378050","modified":1576469873160},{"_id":"public/CNAME","hash":"39cfa2568e3c40a28db7cc73c85cce059f39ef90","modified":1576469873160},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1576469873160},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1576469873160},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1576469873160},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1576469873160},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1576469873160},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1576469873160},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1576469873160},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1576469873160},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1576469873160},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1576469873160},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1576469873160},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1576469873160},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1576469873160},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1576469873160},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1576469873160},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1576469873160},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1576469873160},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1576469873160},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1576469873160},{"_id":"public/js/algolia-search.js","hash":"813afcc30feee11d59f297f2d5a96f98fbbd4743","modified":1576469873160},{"_id":"public/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1576469873160},{"_id":"public/js/local-search.js","hash":"9f3d3ddff86e7b2828772aba915a5ebfd7d9f55f","modified":1576469873160},{"_id":"public/js/next-boot.js","hash":"f7045763e277e685c271bd4b4c37e531d699ac63","modified":1576469873160},{"_id":"public/js/motion.js","hash":"09f8be6bcc6920546bb06e3f8c0181ec62c70b90","modified":1576469873160},{"_id":"public/js/utils.js","hash":"32ad2609c1d80a8d5180ec059d0eea0c6735d1f2","modified":1576469873160},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1576469873160},{"_id":"public/js/schemes/muse.js","hash":"792f4522a3b0b96584a041a4aca20fcded410079","modified":1576469873160},{"_id":"public/js/schemes/pisces.js","hash":"52d139e6f3bc212c8c9b71bc9e57e931920434a6","modified":1576469873160},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1576469873160},{"_id":"public/css/main.css","hash":"c093109f9fadf6414d6dec00adc856cd9c69030d","modified":1576469873160},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1576469873160},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1576469873160},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1576469873160},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1576469873160},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1576469873160}],"Category":[],"Data":[],"Page":[{"title":"关于我","date":"2019-12-13T09:59:25.000Z","_content":"\n## 我是谁\n\n熟悉C/C++\\GO\\Python的后端开发者。深耕于区块链行业。\n\n是目前世界第一矿池[poolin 币印](https://poolin.com)的后端开发工程师。\n\n喜欢玩儿单机游戏。\n\n## 常居地\n\n北京\n\n## 联系方式\n\n###  WeChat/微信\n\nlacdon\n\n### Email/邮件\n\nlacdonapplication@gmail.com\n\nor\n\nlacdon@hotmail.com\n\nor\n\nlacdon@126.com\n\n### Telegram/电报\n\nlacdon\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2019-12-13 17:59:25\n---\n\n## 我是谁\n\n熟悉C/C++\\GO\\Python的后端开发者。深耕于区块链行业。\n\n是目前世界第一矿池[poolin 币印](https://poolin.com)的后端开发工程师。\n\n喜欢玩儿单机游戏。\n\n## 常居地\n\n北京\n\n## 联系方式\n\n###  WeChat/微信\n\nlacdon\n\n### Email/邮件\n\nlacdonapplication@gmail.com\n\nor\n\nlacdon@hotmail.com\n\nor\n\nlacdon@126.com\n\n### Telegram/电报\n\nlacdon\n","updated":"2019-12-13T10:08:37.967Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck47xgjo90000i6s6d8offek5","content":"<h2 id=\"我是谁\"><a href=\"#我是谁\" class=\"headerlink\" title=\"我是谁\"></a>我是谁</h2><p>熟悉C/C++\\GO\\Python的后端开发者。深耕于区块链行业。</p>\n<p>是目前世界第一矿池<a href=\"https://poolin.com\" target=\"_blank\" rel=\"noopener\">poolin 币印</a>的后端开发工程师。</p>\n<p>喜欢玩儿单机游戏。</p>\n<h2 id=\"常居地\"><a href=\"#常居地\" class=\"headerlink\" title=\"常居地\"></a>常居地</h2><p>北京</p>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><h3 id=\"WeChat-微信\"><a href=\"#WeChat-微信\" class=\"headerlink\" title=\"WeChat/微信\"></a>WeChat/微信</h3><p>lacdon</p>\n<h3 id=\"Email-邮件\"><a href=\"#Email-邮件\" class=\"headerlink\" title=\"Email/邮件\"></a>Email/邮件</h3><p><a href=\"mailto:lacdonapplication@gmail.com\">lacdonapplication@gmail.com</a></p>\n<p>or</p>\n<p><a href=\"mailto:lacdon@hotmail.com\">lacdon@hotmail.com</a></p>\n<p>or</p>\n<p><a href=\"mailto:lacdon@126.com\">lacdon@126.com</a></p>\n<h3 id=\"Telegram-电报\"><a href=\"#Telegram-电报\" class=\"headerlink\" title=\"Telegram/电报\"></a>Telegram/电报</h3><p>lacdon</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"我是谁\"><a href=\"#我是谁\" class=\"headerlink\" title=\"我是谁\"></a>我是谁</h2><p>熟悉C/C++\\GO\\Python的后端开发者。深耕于区块链行业。</p>\n<p>是目前世界第一矿池<a href=\"https://poolin.com\" target=\"_blank\" rel=\"noopener\">poolin 币印</a>的后端开发工程师。</p>\n<p>喜欢玩儿单机游戏。</p>\n<h2 id=\"常居地\"><a href=\"#常居地\" class=\"headerlink\" title=\"常居地\"></a>常居地</h2><p>北京</p>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><h3 id=\"WeChat-微信\"><a href=\"#WeChat-微信\" class=\"headerlink\" title=\"WeChat/微信\"></a>WeChat/微信</h3><p>lacdon</p>\n<h3 id=\"Email-邮件\"><a href=\"#Email-邮件\" class=\"headerlink\" title=\"Email/邮件\"></a>Email/邮件</h3><p><a href=\"mailto:lacdonapplication@gmail.com\">lacdonapplication@gmail.com</a></p>\n<p>or</p>\n<p><a href=\"mailto:lacdon@hotmail.com\">lacdon@hotmail.com</a></p>\n<p>or</p>\n<p><a href=\"mailto:lacdon@126.com\">lacdon@126.com</a></p>\n<h3 id=\"Telegram-电报\"><a href=\"#Telegram-电报\" class=\"headerlink\" title=\"Telegram/电报\"></a>Telegram/电报</h3><p>lacdon</p>\n"}],"Post":[{"title":"Raven相关研究","date":"2019-12-13T10:16:56.000Z","_content":"\n\n## 主要信息\n\n1. 出块时间 : 1分钟\n\n2. 块奖励 : 5000 //Jan 4, 2018 1:11:34 AM 创世块头，约2022年减半\n\n3. 难度调整周期 ：\n\n   - 未启用黑暗重力波(DGW h < 338778) : 2016个块, 取余\n   - 启用黑暗重力波动(DGW h >= 338778) : 逐个块调整, 180块\n4. 减半周期 : 2,100,000个块, 约4年\n\n5. POW limit : 00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n\n6. P2P 通讯版本号 : 70025  `X16RV2_VERSION`\n\n7. magic number : \n\n   - 主网 : \n     * 倒 :  0x4e564152 // 'N' 'V' 'A' 'R'\n     * 正 :  0x5241564e // 'R' 'A' 'V' 'N'\n   - 测试网 : \n     - 倒 :  0x544e5652 // 'T' 'N' 'V' 'R'\n     - 正 :  0x52564e54 // 'R' 'V' 'N' 'T'\n\n8. 块头 和比特币一样 80bytes\n\n   ```c++\n   class CBlockHeader\n   {\n   public:\n       // header\n       int32_t nVersion;        // 4\n       uint256 hashPrevBlock;   // 32\n       uint256 hashMerkleRoot;  // 32\n       uint32_t nTime;          // 4\n       uint32_t nBits;          // 4\n       uint32_t nNonce;         // 4\n   }\n   ```\n\n9. 算法 \n\n   1. x16r算法 第二代\n\n      | Number=Hashing algorithm |\n      | :----------------------- |\n      | 0=Blake                  |\n      | 1=BMW                    |\n      | 2=Groestl                |\n      | 3=Jh                     |\n      | 4=Keccak                 |\n      | 5=Skein                  |\n      | 6=Luffa                  |\n      | 7=Cubehash               |\n      | 8=Shavite                |\n      | 9=Simd                   |\n      | A=Echo                   |\n      | B=Hamsi                  |\n      | C=Fugue                  |\n      | D=Shabal                 |\n      | E=Whirlpool              |\n      | F=SHA-512                |\n\n## 参数相关代码\n\n```c++\nPow limit = 00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n\n    CMainParams() {\n        strNetworkID = \"main\";\n        consensus.nSubsidyHalvingInterval = 2100000;  //~ 4 yrs at 1 min block time. 2,100,000\n        consensus.nBIP34Enabled = true;\n        consensus.nBIP65Enabled = true; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n        consensus.nBIP66Enabled = true;\n        consensus.nSegwitEnabled = true;\n        consensus.nCSVEnabled = true;\n        consensus.powLimit = uint256S(\"00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n        consensus.nPowTargetTimespan = 2016 * 60; // 1.4 days 120960秒，2016分钟,也就是2016/60=33.6小时，1.4天2016个块\n        consensus.nPowTargetSpacing = 1 * 60; // 60秒一个块 ， 1分钟一个块\n        consensus.fPowAllowMinDifficultyBlocks = false; //只有测试网允许\n        consensus.fPowNoRetargeting = false;\n        consensus.nRuleChangeActivationThreshold = 1814; // Approx 90% of 2016\n        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing // 确认时间= 难度调整周期\n        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n        consensus.vDeployments[Consensus::DEPLOYMENT_ASSETS].bit = 6;  //Assets (RIP2)\n        consensus.vDeployments[Consensus::DEPLOYMENT_ASSETS].nStartTime = 1540944000; // Oct 31, 2018\n        consensus.vDeployments[Consensus::DEPLOYMENT_ASSETS].nTimeout = 1572480000; // Oct 31, 2019\n\n\n        // The best chain should have at least this much work.\n        consensus.nMinimumChainWork = uint256S(\"0x00\"); // 最小工作量\n        // By default assume that the signatures in ancestors of this block are valid.\n        consensus.defaultAssumeValid = uint256S(\"0x00\");\n\n        // The best chain should have at least this much work.\n        //TODO: This needs to be changed when we re-start the chain\n        //consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000000000000000000c000c00\");\n        //TODO - Set this to genesis block\n        // By default assume that the signatures in ancestors of this block are valid.\n        //consensus.defaultAssumeValid = uint256S(\"0x0000000000000000003b9ce759c2a087d52abc4266f8f4ebd6d768b89defa50a\"); //477890\n        /**\n         * The message start string is designed to be unlikely to occur in normal data.\n         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n         * a large 32-bit integer with any alignment.\n         */\n\t// magic number\n\t\n\t//主网络\n\tMainNetBitcoinNet=0x4e564152//'N''V''A''R'\n\t//测试网\n\tTestNetBitcoinNet=0x544e5652//'T''N''V''R'\n\t\n        pchMessageStart[0] = 0x52; // R\n        pchMessageStart[1] = 0x41; // A\n        pchMessageStart[2] = 0x56; // V\n        pchMessageStart[3] = 0x4e; // N\n        nDefaultPort = 8767;\n        nPruneAfterHeight = 100000;\n        genesis = CreateGenesisBlock(1514999494, 25023712, 0x1e00ffff, 4, 5000 * COIN);\n        consensus.hashGenesisBlock = genesis.GetX16RHash();\n        assert(consensus.hashGenesisBlock == uint256S(\"0000006b444bc2f2ffe627be9d9e7e7a0730000870ef6eb6da46c8eae389df90\"));\n        assert(genesis.hashMerkleRoot == uint256S(\"28ff00a867739a352523808d301f504bc4547699398d70faf2266a8bae5f3516\"));\n        vSeeds.emplace_back(\"seed-raven.bitactivate.com\", false);\n        vSeeds.emplace_back(\"seed-raven.ravencoin.com\", false);\n        vSeeds.emplace_back(\"seed-raven.ravencoin.org\", false);\n        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,60);\n        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,122);\n        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,128);\n        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n        vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));\n        fDefaultConsistencyChecks = false;\n        fRequireStandard = true;\n        fMineBlocksOnDemand = false;\n        fMiningRequiresPeers = true;\n        checkpointData = (CCheckpointData) {\n            {\n                { 535721, uint256S(\"0x000000000001217f58a594ca742c8635ecaaaf695d1a63f6ab06979f1c159e04\")},\n            }\n        };\n        chainTxData = ChainTxData{\n            // Update as we know more about the contents of the Raven chain\n            // Stats as of 000000000000a72545994ce72b25042ea63707fca169ca4deb7f9dab4f1b1798 window size 43200\n            1543817453, // * UNIX timestamp of last known number of transactions\n            2033711,    // * total number of transactions between genesis and that timestamp\n                        //   (the tx=... number in the SetBestChain debug.log lines)\n            0.1         // * estimated number of transactions per second after that timestamp\n        };\n        /** RVN Start **/\n        // Burn Amounts\n        nIssueAssetBurnAmount = 500 * COIN;\n        nReissueAssetBurnAmount = 100 * COIN;\n        nIssueSubAssetBurnAmount = 100 * COIN;\n        nIssueUniqueAssetBurnAmount = 5 * COIN;\n        // Burn Addresses\n        strIssueAssetBurnAddress = \"RXissueAssetXXXXXXXXXXXXXXXXXhhZGt\";\n        strReissueAssetBurnAddress = \"RXReissueAssetXXXXXXXXXXXXXXVEFAWu\";\n        strIssueSubAssetBurnAddress = \"RXissueSubAssetXXXXXXXXXXXXXWcwhwL\";\n        strIssueUniqueAssetBurnAddress = \"RXissueUniqueAssetXXXXXXXXXXWEAe58\";\n        //Global Burn Address\n        strGlobalBurnAddress = \"RXBurnXXXXXXXXXXXXXXXXXXXXXXWUo9FV\";\n        // DGW Activation\n        nDGWActivationBlock = 338778;\n        nX16RV2ActivationTime = 1569945600; //Tue Oct 01 2019 16:00:00 UTC\n        nMaxReorganizationDepth = 60; // 60 at 1 minute block timespan is +/- 60 minutes.\n        nMinReorganizationPeers = 4;\n        nMinReorganizationAge = 60 * 60 * 12; // 12 hours\n        /** RVN End **/\n    }\n};\n```\n\n\n\n```c++\n//Version.h\n//当前版本号为 70025\nstatic const int PROTOCOL_VERSION = 70025;\n//! initial proto version, to be increased after version/verack negotiation\nstatic const int INIT_PROTO_VERSION = 209;\n//! In this version, 'getheaders' was introduced.\nstatic const int GETHEADERS_VERSION = 31800;\n//! assetdata network request is allowed for this version\nstatic const int ASSETDATA_VERSION = 70017;\n//! disconnect from peers older than this proto version\nstatic const int MIN_PEER_PROTO_VERSION = ASSETDATA_VERSION;\n//! nTime field added to CAddress, starting with this version;\n//! if possible, avoid requesting addresses nodes older than this\nstatic const int CADDR_TIME_VERSION = 31402;\n//! BIP 0031, pong message, is enabled for all versions AFTER this one\nstatic const int BIP0031_VERSION = 60000;\n//! \"filter*\" commands are disabled without NODE_BLOOM after and including this version\nstatic const int NO_BLOOM_VERSION = 70011;\n//! \"sendheaders\" command and announcing blocks with headers starts with this version\nstatic const int SENDHEADERS_VERSION = 70012;\n//! \"feefilter\" tells peers to filter invs to you by fee starts with this version\nstatic const int FEEFILTER_VERSION = 70013;\n//! short-id-based block download starts with this version\nstatic const int SHORT_IDS_BLOCKS_VERSION = 70014;\n//! not banning for invalid compact blocks starts with this version\nstatic const int INVALID_CB_NO_BAN_VERSION = 70015;\n//! getassetdata reutrn asstnotfound, and assetdata doesn't have blockhash in the data\nstatic const int ASSETDATA_VERSION_UPDATED = 70020;\n//! getassetdata reutrn asstnotfound, and assetdata doesn't have blockhash in the data\nstatic const int X16RV2_VERSION = 70025;\n\n```\n\n## 难度调整代码\n\n```c++\n// pow.cpp\nunsigned int static DarkGravityWave(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::ConsensusParams& params) {\n    /* current difficulty formula, dash - DarkGravity v3, written by Evan Duffield - evan@dash.org */\n    assert(pindexLast != nullptr);\n\n    unsigned int nProofOfWorkLimit = UintToArith256(params.powLimit).GetCompact();\n    const arith_uint256 bnPowLimit = UintToArith256(params.powLimit);\n    int64_t nPastBlocks = 180; // ~3hr\n\n    // make sure we have at least (nPastBlocks + 1) blocks, otherwise just return powLimit\n    if (!pindexLast || pindexLast->nHeight < nPastBlocks) {\n        return bnPowLimit.GetCompact();\n    }\n\n    if (params.fPowAllowMinDifficultyBlocks && params.fPowNoRetargeting) {\n        // Special difficulty rule:\n        // If the new block's timestamp is more than 2 * 1 minutes\n        // then allow mining of a min-difficulty block.\n        if (pblock->GetBlockTime() > pindexLast->GetBlockTime() + params.nPowTargetSpacing * 2)\n            return nProofOfWorkLimit;\n        else {\n            // Return the last non-special-min-difficulty-rules-block\n            const CBlockIndex *pindex = pindexLast;\n            while (pindex->pprev && pindex->nHeight % params.DifficultyAdjustmentInterval() != 0 &&\n                   pindex->nBits == nProofOfWorkLimit)\n                pindex = pindex->pprev;\n            return pindex->nBits;\n        }\n    }\n\n    const CBlockIndex *pindex = pindexLast;\n    arith_uint256 bnPastTargetAvg;\n\n    for (unsigned int nCountBlocks = 1; nCountBlocks <= nPastBlocks; nCountBlocks++) {\n        arith_uint256 bnTarget = arith_uint256().SetCompact(pindex->nBits);\n        if (nCountBlocks == 1) {\n            bnPastTargetAvg = bnTarget;\n        } else {\n            // NOTE: that's not an average really...\n            bnPastTargetAvg = (bnPastTargetAvg * nCountBlocks + bnTarget) / (nCountBlocks + 1);\n        }\n\n        if(nCountBlocks != nPastBlocks) {\n            assert(pindex->pprev); // should never fail\n            pindex = pindex->pprev;\n        }\n    }\n\n    arith_uint256 bnNew(bnPastTargetAvg);\n\n    int64_t nActualTimespan = pindexLast->GetBlockTime() - pindex->GetBlockTime();\n    // NOTE: is this accurate? nActualTimespan counts it for (nPastBlocks - 1) blocks only...\n    int64_t nTargetTimespan = nPastBlocks * params.nPowTargetSpacing;\n\n    if (nActualTimespan < nTargetTimespan/3)\n        nActualTimespan = nTargetTimespan/3;\n    if (nActualTimespan > nTargetTimespan*3)\n        nActualTimespan = nTargetTimespan*3;\n\n    // Retarget\n    bnNew *= nActualTimespan;\n    bnNew /= nTargetTimespan;\n\n    if (bnNew > bnPowLimit) {\n        bnNew = bnPowLimit;\n    }\n\n    return bnNew.GetCompact();\n}\n\n```\n\n\n","source":"_posts/Raven相关研究.md","raw":"---\ntitle: Raven相关研究\ndate: 2019-12-13 18:16:56\ntags: \n- blockchain\n- cryptocoin \n\n---\n\n\n## 主要信息\n\n1. 出块时间 : 1分钟\n\n2. 块奖励 : 5000 //Jan 4, 2018 1:11:34 AM 创世块头，约2022年减半\n\n3. 难度调整周期 ：\n\n   - 未启用黑暗重力波(DGW h < 338778) : 2016个块, 取余\n   - 启用黑暗重力波动(DGW h >= 338778) : 逐个块调整, 180块\n4. 减半周期 : 2,100,000个块, 约4年\n\n5. POW limit : 00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n\n6. P2P 通讯版本号 : 70025  `X16RV2_VERSION`\n\n7. magic number : \n\n   - 主网 : \n     * 倒 :  0x4e564152 // 'N' 'V' 'A' 'R'\n     * 正 :  0x5241564e // 'R' 'A' 'V' 'N'\n   - 测试网 : \n     - 倒 :  0x544e5652 // 'T' 'N' 'V' 'R'\n     - 正 :  0x52564e54 // 'R' 'V' 'N' 'T'\n\n8. 块头 和比特币一样 80bytes\n\n   ```c++\n   class CBlockHeader\n   {\n   public:\n       // header\n       int32_t nVersion;        // 4\n       uint256 hashPrevBlock;   // 32\n       uint256 hashMerkleRoot;  // 32\n       uint32_t nTime;          // 4\n       uint32_t nBits;          // 4\n       uint32_t nNonce;         // 4\n   }\n   ```\n\n9. 算法 \n\n   1. x16r算法 第二代\n\n      | Number=Hashing algorithm |\n      | :----------------------- |\n      | 0=Blake                  |\n      | 1=BMW                    |\n      | 2=Groestl                |\n      | 3=Jh                     |\n      | 4=Keccak                 |\n      | 5=Skein                  |\n      | 6=Luffa                  |\n      | 7=Cubehash               |\n      | 8=Shavite                |\n      | 9=Simd                   |\n      | A=Echo                   |\n      | B=Hamsi                  |\n      | C=Fugue                  |\n      | D=Shabal                 |\n      | E=Whirlpool              |\n      | F=SHA-512                |\n\n## 参数相关代码\n\n```c++\nPow limit = 00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n\n    CMainParams() {\n        strNetworkID = \"main\";\n        consensus.nSubsidyHalvingInterval = 2100000;  //~ 4 yrs at 1 min block time. 2,100,000\n        consensus.nBIP34Enabled = true;\n        consensus.nBIP65Enabled = true; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n        consensus.nBIP66Enabled = true;\n        consensus.nSegwitEnabled = true;\n        consensus.nCSVEnabled = true;\n        consensus.powLimit = uint256S(\"00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n        consensus.nPowTargetTimespan = 2016 * 60; // 1.4 days 120960秒，2016分钟,也就是2016/60=33.6小时，1.4天2016个块\n        consensus.nPowTargetSpacing = 1 * 60; // 60秒一个块 ， 1分钟一个块\n        consensus.fPowAllowMinDifficultyBlocks = false; //只有测试网允许\n        consensus.fPowNoRetargeting = false;\n        consensus.nRuleChangeActivationThreshold = 1814; // Approx 90% of 2016\n        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing // 确认时间= 难度调整周期\n        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n        consensus.vDeployments[Consensus::DEPLOYMENT_ASSETS].bit = 6;  //Assets (RIP2)\n        consensus.vDeployments[Consensus::DEPLOYMENT_ASSETS].nStartTime = 1540944000; // Oct 31, 2018\n        consensus.vDeployments[Consensus::DEPLOYMENT_ASSETS].nTimeout = 1572480000; // Oct 31, 2019\n\n\n        // The best chain should have at least this much work.\n        consensus.nMinimumChainWork = uint256S(\"0x00\"); // 最小工作量\n        // By default assume that the signatures in ancestors of this block are valid.\n        consensus.defaultAssumeValid = uint256S(\"0x00\");\n\n        // The best chain should have at least this much work.\n        //TODO: This needs to be changed when we re-start the chain\n        //consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000000000000000000c000c00\");\n        //TODO - Set this to genesis block\n        // By default assume that the signatures in ancestors of this block are valid.\n        //consensus.defaultAssumeValid = uint256S(\"0x0000000000000000003b9ce759c2a087d52abc4266f8f4ebd6d768b89defa50a\"); //477890\n        /**\n         * The message start string is designed to be unlikely to occur in normal data.\n         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n         * a large 32-bit integer with any alignment.\n         */\n\t// magic number\n\t\n\t//主网络\n\tMainNetBitcoinNet=0x4e564152//'N''V''A''R'\n\t//测试网\n\tTestNetBitcoinNet=0x544e5652//'T''N''V''R'\n\t\n        pchMessageStart[0] = 0x52; // R\n        pchMessageStart[1] = 0x41; // A\n        pchMessageStart[2] = 0x56; // V\n        pchMessageStart[3] = 0x4e; // N\n        nDefaultPort = 8767;\n        nPruneAfterHeight = 100000;\n        genesis = CreateGenesisBlock(1514999494, 25023712, 0x1e00ffff, 4, 5000 * COIN);\n        consensus.hashGenesisBlock = genesis.GetX16RHash();\n        assert(consensus.hashGenesisBlock == uint256S(\"0000006b444bc2f2ffe627be9d9e7e7a0730000870ef6eb6da46c8eae389df90\"));\n        assert(genesis.hashMerkleRoot == uint256S(\"28ff00a867739a352523808d301f504bc4547699398d70faf2266a8bae5f3516\"));\n        vSeeds.emplace_back(\"seed-raven.bitactivate.com\", false);\n        vSeeds.emplace_back(\"seed-raven.ravencoin.com\", false);\n        vSeeds.emplace_back(\"seed-raven.ravencoin.org\", false);\n        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,60);\n        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,122);\n        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,128);\n        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n        vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));\n        fDefaultConsistencyChecks = false;\n        fRequireStandard = true;\n        fMineBlocksOnDemand = false;\n        fMiningRequiresPeers = true;\n        checkpointData = (CCheckpointData) {\n            {\n                { 535721, uint256S(\"0x000000000001217f58a594ca742c8635ecaaaf695d1a63f6ab06979f1c159e04\")},\n            }\n        };\n        chainTxData = ChainTxData{\n            // Update as we know more about the contents of the Raven chain\n            // Stats as of 000000000000a72545994ce72b25042ea63707fca169ca4deb7f9dab4f1b1798 window size 43200\n            1543817453, // * UNIX timestamp of last known number of transactions\n            2033711,    // * total number of transactions between genesis and that timestamp\n                        //   (the tx=... number in the SetBestChain debug.log lines)\n            0.1         // * estimated number of transactions per second after that timestamp\n        };\n        /** RVN Start **/\n        // Burn Amounts\n        nIssueAssetBurnAmount = 500 * COIN;\n        nReissueAssetBurnAmount = 100 * COIN;\n        nIssueSubAssetBurnAmount = 100 * COIN;\n        nIssueUniqueAssetBurnAmount = 5 * COIN;\n        // Burn Addresses\n        strIssueAssetBurnAddress = \"RXissueAssetXXXXXXXXXXXXXXXXXhhZGt\";\n        strReissueAssetBurnAddress = \"RXReissueAssetXXXXXXXXXXXXXXVEFAWu\";\n        strIssueSubAssetBurnAddress = \"RXissueSubAssetXXXXXXXXXXXXXWcwhwL\";\n        strIssueUniqueAssetBurnAddress = \"RXissueUniqueAssetXXXXXXXXXXWEAe58\";\n        //Global Burn Address\n        strGlobalBurnAddress = \"RXBurnXXXXXXXXXXXXXXXXXXXXXXWUo9FV\";\n        // DGW Activation\n        nDGWActivationBlock = 338778;\n        nX16RV2ActivationTime = 1569945600; //Tue Oct 01 2019 16:00:00 UTC\n        nMaxReorganizationDepth = 60; // 60 at 1 minute block timespan is +/- 60 minutes.\n        nMinReorganizationPeers = 4;\n        nMinReorganizationAge = 60 * 60 * 12; // 12 hours\n        /** RVN End **/\n    }\n};\n```\n\n\n\n```c++\n//Version.h\n//当前版本号为 70025\nstatic const int PROTOCOL_VERSION = 70025;\n//! initial proto version, to be increased after version/verack negotiation\nstatic const int INIT_PROTO_VERSION = 209;\n//! In this version, 'getheaders' was introduced.\nstatic const int GETHEADERS_VERSION = 31800;\n//! assetdata network request is allowed for this version\nstatic const int ASSETDATA_VERSION = 70017;\n//! disconnect from peers older than this proto version\nstatic const int MIN_PEER_PROTO_VERSION = ASSETDATA_VERSION;\n//! nTime field added to CAddress, starting with this version;\n//! if possible, avoid requesting addresses nodes older than this\nstatic const int CADDR_TIME_VERSION = 31402;\n//! BIP 0031, pong message, is enabled for all versions AFTER this one\nstatic const int BIP0031_VERSION = 60000;\n//! \"filter*\" commands are disabled without NODE_BLOOM after and including this version\nstatic const int NO_BLOOM_VERSION = 70011;\n//! \"sendheaders\" command and announcing blocks with headers starts with this version\nstatic const int SENDHEADERS_VERSION = 70012;\n//! \"feefilter\" tells peers to filter invs to you by fee starts with this version\nstatic const int FEEFILTER_VERSION = 70013;\n//! short-id-based block download starts with this version\nstatic const int SHORT_IDS_BLOCKS_VERSION = 70014;\n//! not banning for invalid compact blocks starts with this version\nstatic const int INVALID_CB_NO_BAN_VERSION = 70015;\n//! getassetdata reutrn asstnotfound, and assetdata doesn't have blockhash in the data\nstatic const int ASSETDATA_VERSION_UPDATED = 70020;\n//! getassetdata reutrn asstnotfound, and assetdata doesn't have blockhash in the data\nstatic const int X16RV2_VERSION = 70025;\n\n```\n\n## 难度调整代码\n\n```c++\n// pow.cpp\nunsigned int static DarkGravityWave(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::ConsensusParams& params) {\n    /* current difficulty formula, dash - DarkGravity v3, written by Evan Duffield - evan@dash.org */\n    assert(pindexLast != nullptr);\n\n    unsigned int nProofOfWorkLimit = UintToArith256(params.powLimit).GetCompact();\n    const arith_uint256 bnPowLimit = UintToArith256(params.powLimit);\n    int64_t nPastBlocks = 180; // ~3hr\n\n    // make sure we have at least (nPastBlocks + 1) blocks, otherwise just return powLimit\n    if (!pindexLast || pindexLast->nHeight < nPastBlocks) {\n        return bnPowLimit.GetCompact();\n    }\n\n    if (params.fPowAllowMinDifficultyBlocks && params.fPowNoRetargeting) {\n        // Special difficulty rule:\n        // If the new block's timestamp is more than 2 * 1 minutes\n        // then allow mining of a min-difficulty block.\n        if (pblock->GetBlockTime() > pindexLast->GetBlockTime() + params.nPowTargetSpacing * 2)\n            return nProofOfWorkLimit;\n        else {\n            // Return the last non-special-min-difficulty-rules-block\n            const CBlockIndex *pindex = pindexLast;\n            while (pindex->pprev && pindex->nHeight % params.DifficultyAdjustmentInterval() != 0 &&\n                   pindex->nBits == nProofOfWorkLimit)\n                pindex = pindex->pprev;\n            return pindex->nBits;\n        }\n    }\n\n    const CBlockIndex *pindex = pindexLast;\n    arith_uint256 bnPastTargetAvg;\n\n    for (unsigned int nCountBlocks = 1; nCountBlocks <= nPastBlocks; nCountBlocks++) {\n        arith_uint256 bnTarget = arith_uint256().SetCompact(pindex->nBits);\n        if (nCountBlocks == 1) {\n            bnPastTargetAvg = bnTarget;\n        } else {\n            // NOTE: that's not an average really...\n            bnPastTargetAvg = (bnPastTargetAvg * nCountBlocks + bnTarget) / (nCountBlocks + 1);\n        }\n\n        if(nCountBlocks != nPastBlocks) {\n            assert(pindex->pprev); // should never fail\n            pindex = pindex->pprev;\n        }\n    }\n\n    arith_uint256 bnNew(bnPastTargetAvg);\n\n    int64_t nActualTimespan = pindexLast->GetBlockTime() - pindex->GetBlockTime();\n    // NOTE: is this accurate? nActualTimespan counts it for (nPastBlocks - 1) blocks only...\n    int64_t nTargetTimespan = nPastBlocks * params.nPowTargetSpacing;\n\n    if (nActualTimespan < nTargetTimespan/3)\n        nActualTimespan = nTargetTimespan/3;\n    if (nActualTimespan > nTargetTimespan*3)\n        nActualTimespan = nTargetTimespan*3;\n\n    // Retarget\n    bnNew *= nActualTimespan;\n    bnNew /= nTargetTimespan;\n\n    if (bnNew > bnPowLimit) {\n        bnNew = bnPowLimit;\n    }\n\n    return bnNew.GetCompact();\n}\n\n```\n\n\n","slug":"Raven相关研究","published":1,"updated":"2019-12-13T10:35:11.446Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck47xgjod0001i6s62d3ccga7","content":"<h2 id=\"主要信息\"><a href=\"#主要信息\" class=\"headerlink\" title=\"主要信息\"></a>主要信息</h2><ol>\n<li><p>出块时间 : 1分钟</p>\n</li>\n<li><p>块奖励 : 5000 //Jan 4, 2018 1:11:34 AM 创世块头，约2022年减半</p>\n</li>\n<li><p>难度调整周期 ：</p>\n<ul>\n<li>未启用黑暗重力波(DGW h &lt; 338778) : 2016个块, 取余</li>\n<li>启用黑暗重力波动(DGW h &gt;= 338778) : 逐个块调整, 180块</li>\n</ul>\n</li>\n<li><p>减半周期 : 2,100,000个块, 约4年</p>\n</li>\n<li><p>POW limit : 00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff</p>\n</li>\n<li><p>P2P 通讯版本号 : 70025  <code>X16RV2_VERSION</code></p>\n</li>\n<li><p>magic number : </p>\n<ul>\n<li>主网 : <ul>\n<li>倒 :  0x4e564152 // ‘N’ ‘V’ ‘A’ ‘R’</li>\n<li>正 :  0x5241564e // ‘R’ ‘A’ ‘V’ ‘N’</li>\n</ul>\n</li>\n<li>测试网 : <ul>\n<li>倒 :  0x544e5652 // ‘T’ ‘N’ ‘V’ ‘R’</li>\n<li>正 :  0x52564e54 // ‘R’ ‘V’ ‘N’ ‘T’</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>块头 和比特币一样 80bytes</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CBlockHeader</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"comment\">// header</span></span><br><span class=\"line\">    <span class=\"keyword\">int32_t</span> nVersion;        <span class=\"comment\">// 4</span></span><br><span class=\"line\">    uint256 hashPrevBlock;   <span class=\"comment\">// 32</span></span><br><span class=\"line\">    uint256 hashMerkleRoot;  <span class=\"comment\">// 32</span></span><br><span class=\"line\">    <span class=\"keyword\">uint32_t</span> nTime;          <span class=\"comment\">// 4</span></span><br><span class=\"line\">    <span class=\"keyword\">uint32_t</span> nBits;          <span class=\"comment\">// 4</span></span><br><span class=\"line\">    <span class=\"keyword\">uint32_t</span> nNonce;         <span class=\"comment\">// 4</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>算法 </p>\n<ol>\n<li><p>x16r算法 第二代</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Number=Hashing algorithm</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">0=Blake</td>\n</tr>\n<tr>\n<td align=\"left\">1=BMW</td>\n</tr>\n<tr>\n<td align=\"left\">2=Groestl</td>\n</tr>\n<tr>\n<td align=\"left\">3=Jh</td>\n</tr>\n<tr>\n<td align=\"left\">4=Keccak</td>\n</tr>\n<tr>\n<td align=\"left\">5=Skein</td>\n</tr>\n<tr>\n<td align=\"left\">6=Luffa</td>\n</tr>\n<tr>\n<td align=\"left\">7=Cubehash</td>\n</tr>\n<tr>\n<td align=\"left\">8=Shavite</td>\n</tr>\n<tr>\n<td align=\"left\">9=Simd</td>\n</tr>\n<tr>\n<td align=\"left\">A=Echo</td>\n</tr>\n<tr>\n<td align=\"left\">B=Hamsi</td>\n</tr>\n<tr>\n<td align=\"left\">C=Fugue</td>\n</tr>\n<tr>\n<td align=\"left\">D=Shabal</td>\n</tr>\n<tr>\n<td align=\"left\">E=Whirlpool</td>\n</tr>\n<tr>\n<td align=\"left\">F=SHA-512</td>\n</tr>\n</tbody></table>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"参数相关代码\"><a href=\"#参数相关代码\" class=\"headerlink\" title=\"参数相关代码\"></a>参数相关代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pow limit = <span class=\"number\">00000f</span>ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff</span><br><span class=\"line\"></span><br><span class=\"line\">    CMainParams() &#123;</span><br><span class=\"line\">        strNetworkID = <span class=\"string\">\"main\"</span>;</span><br><span class=\"line\">        consensus.nSubsidyHalvingInterval = <span class=\"number\">2100000</span>;  <span class=\"comment\">//~ 4 yrs at 1 min block time. 2,100,000</span></span><br><span class=\"line\">        consensus.nBIP34Enabled = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        consensus.nBIP65Enabled = <span class=\"literal\">true</span>; <span class=\"comment\">// 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0</span></span><br><span class=\"line\">        consensus.nBIP66Enabled = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        consensus.nSegwitEnabled = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        consensus.nCSVEnabled = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        consensus.powLimit = uint256S(<span class=\"string\">\"00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"</span>);</span><br><span class=\"line\">        consensus.nPowTargetTimespan = <span class=\"number\">2016</span> * <span class=\"number\">60</span>; <span class=\"comment\">// 1.4 days 120960秒，2016分钟,也就是2016/60=33.6小时，1.4天2016个块</span></span><br><span class=\"line\">        consensus.nPowTargetSpacing = <span class=\"number\">1</span> * <span class=\"number\">60</span>; <span class=\"comment\">// 60秒一个块 ， 1分钟一个块</span></span><br><span class=\"line\">        consensus.fPowAllowMinDifficultyBlocks = <span class=\"literal\">false</span>; <span class=\"comment\">//只有测试网允许</span></span><br><span class=\"line\">        consensus.fPowNoRetargeting = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        consensus.nRuleChangeActivationThreshold = <span class=\"number\">1814</span>; <span class=\"comment\">// Approx 90% of 2016</span></span><br><span class=\"line\">        consensus.nMinerConfirmationWindow = <span class=\"number\">2016</span>; <span class=\"comment\">// nPowTargetTimespan / nPowTargetSpacing // 确认时间= 难度调整周期</span></span><br><span class=\"line\">        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].<span class=\"built_in\">bit</span> = <span class=\"number\">28</span>;</span><br><span class=\"line\">        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = <span class=\"number\">1199145601</span>; <span class=\"comment\">// January 1, 2008</span></span><br><span class=\"line\">        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = <span class=\"number\">1230767999</span>; <span class=\"comment\">// December 31, 2008</span></span><br><span class=\"line\">        consensus.vDeployments[Consensus::DEPLOYMENT_ASSETS].<span class=\"built_in\">bit</span> = <span class=\"number\">6</span>;  <span class=\"comment\">//Assets (RIP2)</span></span><br><span class=\"line\">        consensus.vDeployments[Consensus::DEPLOYMENT_ASSETS].nStartTime = <span class=\"number\">1540944000</span>; <span class=\"comment\">// Oct 31, 2018</span></span><br><span class=\"line\">        consensus.vDeployments[Consensus::DEPLOYMENT_ASSETS].nTimeout = <span class=\"number\">1572480000</span>; <span class=\"comment\">// Oct 31, 2019</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// The best chain should have at least this much work.</span></span><br><span class=\"line\">        consensus.nMinimumChainWork = uint256S(<span class=\"string\">\"0x00\"</span>); <span class=\"comment\">// 最小工作量</span></span><br><span class=\"line\">        <span class=\"comment\">// By default assume that the signatures in ancestors of this block are valid.</span></span><br><span class=\"line\">        consensus.defaultAssumeValid = uint256S(<span class=\"string\">\"0x00\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// The best chain should have at least this much work.</span></span><br><span class=\"line\">        <span class=\"comment\">//<span class=\"doctag\">TODO:</span> This needs to be changed when we re-start the chain</span></span><br><span class=\"line\">        <span class=\"comment\">//consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000000000000000000c000c00\");</span></span><br><span class=\"line\">        <span class=\"comment\">//TODO - Set this to genesis block</span></span><br><span class=\"line\">        <span class=\"comment\">// By default assume that the signatures in ancestors of this block are valid.</span></span><br><span class=\"line\">        <span class=\"comment\">//consensus.defaultAssumeValid = uint256S(\"0x0000000000000000003b9ce759c2a087d52abc4266f8f4ebd6d768b89defa50a\"); //477890</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * The message start string is designed to be unlikely to occur in normal data.</span></span><br><span class=\"line\"><span class=\"comment\">         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce</span></span><br><span class=\"line\"><span class=\"comment\">         * a large 32-bit integer with any alignment.</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">\t<span class=\"comment\">// magic number</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//主网络</span></span><br><span class=\"line\">\tMainNetBitcoinNet=<span class=\"number\">0x4e564152</span><span class=\"comment\">//'N''V''A''R'</span></span><br><span class=\"line\">\t<span class=\"comment\">//测试网</span></span><br><span class=\"line\">\tTestNetBitcoinNet=<span class=\"number\">0x544e5652</span><span class=\"comment\">//'T''N''V''R'</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">        pchMessageStart[<span class=\"number\">0</span>] = <span class=\"number\">0x52</span>; <span class=\"comment\">// R</span></span><br><span class=\"line\">        pchMessageStart[<span class=\"number\">1</span>] = <span class=\"number\">0x41</span>; <span class=\"comment\">// A</span></span><br><span class=\"line\">        pchMessageStart[<span class=\"number\">2</span>] = <span class=\"number\">0x56</span>; <span class=\"comment\">// V</span></span><br><span class=\"line\">        pchMessageStart[<span class=\"number\">3</span>] = <span class=\"number\">0x4e</span>; <span class=\"comment\">// N</span></span><br><span class=\"line\">        nDefaultPort = <span class=\"number\">8767</span>;</span><br><span class=\"line\">        nPruneAfterHeight = <span class=\"number\">100000</span>;</span><br><span class=\"line\">        genesis = CreateGenesisBlock(<span class=\"number\">1514999494</span>, <span class=\"number\">25023712</span>, <span class=\"number\">0x1e00ffff</span>, <span class=\"number\">4</span>, <span class=\"number\">5000</span> * COIN);</span><br><span class=\"line\">        consensus.hashGenesisBlock = genesis.GetX16RHash();</span><br><span class=\"line\">        assert(consensus.hashGenesisBlock == uint256S(<span class=\"string\">\"0000006b444bc2f2ffe627be9d9e7e7a0730000870ef6eb6da46c8eae389df90\"</span>));</span><br><span class=\"line\">        assert(genesis.hashMerkleRoot == uint256S(<span class=\"string\">\"28ff00a867739a352523808d301f504bc4547699398d70faf2266a8bae5f3516\"</span>));</span><br><span class=\"line\">        vSeeds.emplace_back(<span class=\"string\">\"seed-raven.bitactivate.com\"</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        vSeeds.emplace_back(<span class=\"string\">\"seed-raven.ravencoin.com\"</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        vSeeds.emplace_back(<span class=\"string\">\"seed-raven.ravencoin.org\"</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        base58Prefixes[PUBKEY_ADDRESS] = <span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span>&gt;(<span class=\"number\">1</span>,<span class=\"number\">60</span>);</span><br><span class=\"line\">        base58Prefixes[SCRIPT_ADDRESS] = <span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span>&gt;(<span class=\"number\">1</span>,<span class=\"number\">122</span>);</span><br><span class=\"line\">        base58Prefixes[SECRET_KEY] =     <span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span>&gt;(<span class=\"number\">1</span>,<span class=\"number\">128</span>);</span><br><span class=\"line\">        base58Prefixes[EXT_PUBLIC_KEY] = &#123;<span class=\"number\">0x04</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xB2</span>, <span class=\"number\">0x1E</span>&#125;;</span><br><span class=\"line\">        base58Prefixes[EXT_SECRET_KEY] = &#123;<span class=\"number\">0x04</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xAD</span>, <span class=\"number\">0xE4</span>&#125;;</span><br><span class=\"line\">        vFixedSeeds = <span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;SeedSpec6&gt;(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));</span><br><span class=\"line\">        fDefaultConsistencyChecks = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        fRequireStandard = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        fMineBlocksOnDemand = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        fMiningRequiresPeers = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        checkpointData = (CCheckpointData) &#123;</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                &#123; <span class=\"number\">535721</span>, uint256S(<span class=\"string\">\"0x000000000001217f58a594ca742c8635ecaaaf695d1a63f6ab06979f1c159e04\"</span>)&#125;,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        chainTxData = ChainTxData&#123;</span><br><span class=\"line\">            <span class=\"comment\">// Update as we know more about the contents of the Raven chain</span></span><br><span class=\"line\">            <span class=\"comment\">// Stats as of 000000000000a72545994ce72b25042ea63707fca169ca4deb7f9dab4f1b1798 window size 43200</span></span><br><span class=\"line\">            <span class=\"number\">1543817453</span>, <span class=\"comment\">// * UNIX timestamp of last known number of transactions</span></span><br><span class=\"line\">            <span class=\"number\">2033711</span>,    <span class=\"comment\">// * total number of transactions between genesis and that timestamp</span></span><br><span class=\"line\">                        <span class=\"comment\">//   (the tx=... number in the SetBestChain debug.log lines)</span></span><br><span class=\"line\">            <span class=\"number\">0.1</span>         <span class=\"comment\">// * estimated number of transactions per second after that timestamp</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"comment\">/** RVN Start **/</span></span><br><span class=\"line\">        <span class=\"comment\">// Burn Amounts</span></span><br><span class=\"line\">        nIssueAssetBurnAmount = <span class=\"number\">500</span> * COIN;</span><br><span class=\"line\">        nReissueAssetBurnAmount = <span class=\"number\">100</span> * COIN;</span><br><span class=\"line\">        nIssueSubAssetBurnAmount = <span class=\"number\">100</span> * COIN;</span><br><span class=\"line\">        nIssueUniqueAssetBurnAmount = <span class=\"number\">5</span> * COIN;</span><br><span class=\"line\">        <span class=\"comment\">// Burn Addresses</span></span><br><span class=\"line\">        strIssueAssetBurnAddress = <span class=\"string\">\"RXissueAssetXXXXXXXXXXXXXXXXXhhZGt\"</span>;</span><br><span class=\"line\">        strReissueAssetBurnAddress = <span class=\"string\">\"RXReissueAssetXXXXXXXXXXXXXXVEFAWu\"</span>;</span><br><span class=\"line\">        strIssueSubAssetBurnAddress = <span class=\"string\">\"RXissueSubAssetXXXXXXXXXXXXXWcwhwL\"</span>;</span><br><span class=\"line\">        strIssueUniqueAssetBurnAddress = <span class=\"string\">\"RXissueUniqueAssetXXXXXXXXXXWEAe58\"</span>;</span><br><span class=\"line\">        <span class=\"comment\">//Global Burn Address</span></span><br><span class=\"line\">        strGlobalBurnAddress = <span class=\"string\">\"RXBurnXXXXXXXXXXXXXXXXXXXXXXWUo9FV\"</span>;</span><br><span class=\"line\">        <span class=\"comment\">// DGW Activation</span></span><br><span class=\"line\">        nDGWActivationBlock = <span class=\"number\">338778</span>;</span><br><span class=\"line\">        nX16RV2ActivationTime = <span class=\"number\">1569945600</span>; <span class=\"comment\">//Tue Oct 01 2019 16:00:00 UTC</span></span><br><span class=\"line\">        nMaxReorganizationDepth = <span class=\"number\">60</span>; <span class=\"comment\">// 60 at 1 minute block timespan is +/- 60 minutes.</span></span><br><span class=\"line\">        nMinReorganizationPeers = <span class=\"number\">4</span>;</span><br><span class=\"line\">        nMinReorganizationAge = <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">12</span>; <span class=\"comment\">// 12 hours</span></span><br><span class=\"line\">        <span class=\"comment\">/** RVN End **/</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Version.h</span></span><br><span class=\"line\"><span class=\"comment\">//当前版本号为 70025</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> PROTOCOL_VERSION = <span class=\"number\">70025</span>;</span><br><span class=\"line\"><span class=\"comment\">//! initial proto version, to be increased after version/verack negotiation</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> INIT_PROTO_VERSION = <span class=\"number\">209</span>;</span><br><span class=\"line\"><span class=\"comment\">//! In this version, 'getheaders' was introduced.</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> GETHEADERS_VERSION = <span class=\"number\">31800</span>;</span><br><span class=\"line\"><span class=\"comment\">//! assetdata network request is allowed for this version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> ASSETDATA_VERSION = <span class=\"number\">70017</span>;</span><br><span class=\"line\"><span class=\"comment\">//! disconnect from peers older than this proto version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MIN_PEER_PROTO_VERSION = ASSETDATA_VERSION;</span><br><span class=\"line\"><span class=\"comment\">//! nTime field added to CAddress, starting with this version;</span></span><br><span class=\"line\"><span class=\"comment\">//! if possible, avoid requesting addresses nodes older than this</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> CADDR_TIME_VERSION = <span class=\"number\">31402</span>;</span><br><span class=\"line\"><span class=\"comment\">//! BIP 0031, pong message, is enabled for all versions AFTER this one</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> BIP0031_VERSION = <span class=\"number\">60000</span>;</span><br><span class=\"line\"><span class=\"comment\">//! \"filter*\" commands are disabled without NODE_BLOOM after and including this version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> NO_BLOOM_VERSION = <span class=\"number\">70011</span>;</span><br><span class=\"line\"><span class=\"comment\">//! \"sendheaders\" command and announcing blocks with headers starts with this version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> SENDHEADERS_VERSION = <span class=\"number\">70012</span>;</span><br><span class=\"line\"><span class=\"comment\">//! \"feefilter\" tells peers to filter invs to you by fee starts with this version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> FEEFILTER_VERSION = <span class=\"number\">70013</span>;</span><br><span class=\"line\"><span class=\"comment\">//! short-id-based block download starts with this version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> SHORT_IDS_BLOCKS_VERSION = <span class=\"number\">70014</span>;</span><br><span class=\"line\"><span class=\"comment\">//! not banning for invalid compact blocks starts with this version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> INVALID_CB_NO_BAN_VERSION = <span class=\"number\">70015</span>;</span><br><span class=\"line\"><span class=\"comment\">//! getassetdata reutrn asstnotfound, and assetdata doesn't have blockhash in the data</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> ASSETDATA_VERSION_UPDATED = <span class=\"number\">70020</span>;</span><br><span class=\"line\"><span class=\"comment\">//! getassetdata reutrn asstnotfound, and assetdata doesn't have blockhash in the data</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> X16RV2_VERSION = <span class=\"number\">70025</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"难度调整代码\"><a href=\"#难度调整代码\" class=\"headerlink\" title=\"难度调整代码\"></a>难度调整代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pow.cpp</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> <span class=\"keyword\">static</span> <span class=\"title\">DarkGravityWave</span><span class=\"params\">(<span class=\"keyword\">const</span> CBlockIndex* pindexLast, <span class=\"keyword\">const</span> CBlockHeader *pblock, <span class=\"keyword\">const</span> Consensus::ConsensusParams&amp; params)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* current difficulty formula, dash - DarkGravity v3, written by Evan Duffield - evan@dash.org */</span></span><br><span class=\"line\">    assert(pindexLast != <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> nProofOfWorkLimit = UintToArith256(params.powLimit).GetCompact();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arith_uint256 bnPowLimit = UintToArith256(params.powLimit);</span><br><span class=\"line\">    <span class=\"keyword\">int64_t</span> nPastBlocks = <span class=\"number\">180</span>; <span class=\"comment\">// ~3hr</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// make sure we have at least (nPastBlocks + 1) blocks, otherwise just return powLimit</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!pindexLast || pindexLast-&gt;nHeight &lt; nPastBlocks) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bnPowLimit.GetCompact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (params.fPowAllowMinDifficultyBlocks &amp;&amp; params.fPowNoRetargeting) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Special difficulty rule:</span></span><br><span class=\"line\">        <span class=\"comment\">// If the new block's timestamp is more than 2 * 1 minutes</span></span><br><span class=\"line\">        <span class=\"comment\">// then allow mining of a min-difficulty block.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pblock-&gt;GetBlockTime() &gt; pindexLast-&gt;GetBlockTime() + params.nPowTargetSpacing * <span class=\"number\">2</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> nProofOfWorkLimit;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Return the last non-special-min-difficulty-rules-block</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> CBlockIndex *pindex = pindexLast;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (pindex-&gt;pprev &amp;&amp; pindex-&gt;nHeight % params.DifficultyAdjustmentInterval() != <span class=\"number\">0</span> &amp;&amp;</span><br><span class=\"line\">                   pindex-&gt;nBits == nProofOfWorkLimit)</span><br><span class=\"line\">                pindex = pindex-&gt;pprev;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> pindex-&gt;nBits;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> CBlockIndex *pindex = pindexLast;</span><br><span class=\"line\">    arith_uint256 bnPastTargetAvg;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> nCountBlocks = <span class=\"number\">1</span>; nCountBlocks &lt;= nPastBlocks; nCountBlocks++) &#123;</span><br><span class=\"line\">        arith_uint256 bnTarget = arith_uint256().SetCompact(pindex-&gt;nBits);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nCountBlocks == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            bnPastTargetAvg = bnTarget;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> that's not an average really...</span></span><br><span class=\"line\">            bnPastTargetAvg = (bnPastTargetAvg * nCountBlocks + bnTarget) / (nCountBlocks + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nCountBlocks != nPastBlocks) &#123;</span><br><span class=\"line\">            assert(pindex-&gt;pprev); <span class=\"comment\">// should never fail</span></span><br><span class=\"line\">            pindex = pindex-&gt;pprev;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">arith_uint256 <span class=\"title\">bnNew</span><span class=\"params\">(bnPastTargetAvg)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int64_t</span> nActualTimespan = pindexLast-&gt;GetBlockTime() - pindex-&gt;GetBlockTime();</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> is this accurate? nActualTimespan counts it for (nPastBlocks - 1) blocks only...</span></span><br><span class=\"line\">    <span class=\"keyword\">int64_t</span> nTargetTimespan = nPastBlocks * params.nPowTargetSpacing;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nActualTimespan &lt; nTargetTimespan/<span class=\"number\">3</span>)</span><br><span class=\"line\">        nActualTimespan = nTargetTimespan/<span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nActualTimespan &gt; nTargetTimespan*<span class=\"number\">3</span>)</span><br><span class=\"line\">        nActualTimespan = nTargetTimespan*<span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Retarget</span></span><br><span class=\"line\">    bnNew *= nActualTimespan;</span><br><span class=\"line\">    bnNew /= nTargetTimespan;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (bnNew &gt; bnPowLimit) &#123;</span><br><span class=\"line\">        bnNew = bnPowLimit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> bnNew.GetCompact();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"主要信息\"><a href=\"#主要信息\" class=\"headerlink\" title=\"主要信息\"></a>主要信息</h2><ol>\n<li><p>出块时间 : 1分钟</p>\n</li>\n<li><p>块奖励 : 5000 //Jan 4, 2018 1:11:34 AM 创世块头，约2022年减半</p>\n</li>\n<li><p>难度调整周期 ：</p>\n<ul>\n<li>未启用黑暗重力波(DGW h &lt; 338778) : 2016个块, 取余</li>\n<li>启用黑暗重力波动(DGW h &gt;= 338778) : 逐个块调整, 180块</li>\n</ul>\n</li>\n<li><p>减半周期 : 2,100,000个块, 约4年</p>\n</li>\n<li><p>POW limit : 00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff</p>\n</li>\n<li><p>P2P 通讯版本号 : 70025  <code>X16RV2_VERSION</code></p>\n</li>\n<li><p>magic number : </p>\n<ul>\n<li>主网 : <ul>\n<li>倒 :  0x4e564152 // ‘N’ ‘V’ ‘A’ ‘R’</li>\n<li>正 :  0x5241564e // ‘R’ ‘A’ ‘V’ ‘N’</li>\n</ul>\n</li>\n<li>测试网 : <ul>\n<li>倒 :  0x544e5652 // ‘T’ ‘N’ ‘V’ ‘R’</li>\n<li>正 :  0x52564e54 // ‘R’ ‘V’ ‘N’ ‘T’</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>块头 和比特币一样 80bytes</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CBlockHeader</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"comment\">// header</span></span><br><span class=\"line\">    <span class=\"keyword\">int32_t</span> nVersion;        <span class=\"comment\">// 4</span></span><br><span class=\"line\">    uint256 hashPrevBlock;   <span class=\"comment\">// 32</span></span><br><span class=\"line\">    uint256 hashMerkleRoot;  <span class=\"comment\">// 32</span></span><br><span class=\"line\">    <span class=\"keyword\">uint32_t</span> nTime;          <span class=\"comment\">// 4</span></span><br><span class=\"line\">    <span class=\"keyword\">uint32_t</span> nBits;          <span class=\"comment\">// 4</span></span><br><span class=\"line\">    <span class=\"keyword\">uint32_t</span> nNonce;         <span class=\"comment\">// 4</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>算法 </p>\n<ol>\n<li><p>x16r算法 第二代</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Number=Hashing algorithm</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">0=Blake</td>\n</tr>\n<tr>\n<td align=\"left\">1=BMW</td>\n</tr>\n<tr>\n<td align=\"left\">2=Groestl</td>\n</tr>\n<tr>\n<td align=\"left\">3=Jh</td>\n</tr>\n<tr>\n<td align=\"left\">4=Keccak</td>\n</tr>\n<tr>\n<td align=\"left\">5=Skein</td>\n</tr>\n<tr>\n<td align=\"left\">6=Luffa</td>\n</tr>\n<tr>\n<td align=\"left\">7=Cubehash</td>\n</tr>\n<tr>\n<td align=\"left\">8=Shavite</td>\n</tr>\n<tr>\n<td align=\"left\">9=Simd</td>\n</tr>\n<tr>\n<td align=\"left\">A=Echo</td>\n</tr>\n<tr>\n<td align=\"left\">B=Hamsi</td>\n</tr>\n<tr>\n<td align=\"left\">C=Fugue</td>\n</tr>\n<tr>\n<td align=\"left\">D=Shabal</td>\n</tr>\n<tr>\n<td align=\"left\">E=Whirlpool</td>\n</tr>\n<tr>\n<td align=\"left\">F=SHA-512</td>\n</tr>\n</tbody></table>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"参数相关代码\"><a href=\"#参数相关代码\" class=\"headerlink\" title=\"参数相关代码\"></a>参数相关代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pow limit = <span class=\"number\">00000f</span>ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff</span><br><span class=\"line\"></span><br><span class=\"line\">    CMainParams() &#123;</span><br><span class=\"line\">        strNetworkID = <span class=\"string\">\"main\"</span>;</span><br><span class=\"line\">        consensus.nSubsidyHalvingInterval = <span class=\"number\">2100000</span>;  <span class=\"comment\">//~ 4 yrs at 1 min block time. 2,100,000</span></span><br><span class=\"line\">        consensus.nBIP34Enabled = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        consensus.nBIP65Enabled = <span class=\"literal\">true</span>; <span class=\"comment\">// 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0</span></span><br><span class=\"line\">        consensus.nBIP66Enabled = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        consensus.nSegwitEnabled = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        consensus.nCSVEnabled = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        consensus.powLimit = uint256S(<span class=\"string\">\"00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"</span>);</span><br><span class=\"line\">        consensus.nPowTargetTimespan = <span class=\"number\">2016</span> * <span class=\"number\">60</span>; <span class=\"comment\">// 1.4 days 120960秒，2016分钟,也就是2016/60=33.6小时，1.4天2016个块</span></span><br><span class=\"line\">        consensus.nPowTargetSpacing = <span class=\"number\">1</span> * <span class=\"number\">60</span>; <span class=\"comment\">// 60秒一个块 ， 1分钟一个块</span></span><br><span class=\"line\">        consensus.fPowAllowMinDifficultyBlocks = <span class=\"literal\">false</span>; <span class=\"comment\">//只有测试网允许</span></span><br><span class=\"line\">        consensus.fPowNoRetargeting = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        consensus.nRuleChangeActivationThreshold = <span class=\"number\">1814</span>; <span class=\"comment\">// Approx 90% of 2016</span></span><br><span class=\"line\">        consensus.nMinerConfirmationWindow = <span class=\"number\">2016</span>; <span class=\"comment\">// nPowTargetTimespan / nPowTargetSpacing // 确认时间= 难度调整周期</span></span><br><span class=\"line\">        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].<span class=\"built_in\">bit</span> = <span class=\"number\">28</span>;</span><br><span class=\"line\">        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = <span class=\"number\">1199145601</span>; <span class=\"comment\">// January 1, 2008</span></span><br><span class=\"line\">        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = <span class=\"number\">1230767999</span>; <span class=\"comment\">// December 31, 2008</span></span><br><span class=\"line\">        consensus.vDeployments[Consensus::DEPLOYMENT_ASSETS].<span class=\"built_in\">bit</span> = <span class=\"number\">6</span>;  <span class=\"comment\">//Assets (RIP2)</span></span><br><span class=\"line\">        consensus.vDeployments[Consensus::DEPLOYMENT_ASSETS].nStartTime = <span class=\"number\">1540944000</span>; <span class=\"comment\">// Oct 31, 2018</span></span><br><span class=\"line\">        consensus.vDeployments[Consensus::DEPLOYMENT_ASSETS].nTimeout = <span class=\"number\">1572480000</span>; <span class=\"comment\">// Oct 31, 2019</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// The best chain should have at least this much work.</span></span><br><span class=\"line\">        consensus.nMinimumChainWork = uint256S(<span class=\"string\">\"0x00\"</span>); <span class=\"comment\">// 最小工作量</span></span><br><span class=\"line\">        <span class=\"comment\">// By default assume that the signatures in ancestors of this block are valid.</span></span><br><span class=\"line\">        consensus.defaultAssumeValid = uint256S(<span class=\"string\">\"0x00\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// The best chain should have at least this much work.</span></span><br><span class=\"line\">        <span class=\"comment\">//<span class=\"doctag\">TODO:</span> This needs to be changed when we re-start the chain</span></span><br><span class=\"line\">        <span class=\"comment\">//consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000000000000000000c000c00\");</span></span><br><span class=\"line\">        <span class=\"comment\">//TODO - Set this to genesis block</span></span><br><span class=\"line\">        <span class=\"comment\">// By default assume that the signatures in ancestors of this block are valid.</span></span><br><span class=\"line\">        <span class=\"comment\">//consensus.defaultAssumeValid = uint256S(\"0x0000000000000000003b9ce759c2a087d52abc4266f8f4ebd6d768b89defa50a\"); //477890</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * The message start string is designed to be unlikely to occur in normal data.</span></span><br><span class=\"line\"><span class=\"comment\">         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce</span></span><br><span class=\"line\"><span class=\"comment\">         * a large 32-bit integer with any alignment.</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">\t<span class=\"comment\">// magic number</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//主网络</span></span><br><span class=\"line\">\tMainNetBitcoinNet=<span class=\"number\">0x4e564152</span><span class=\"comment\">//'N''V''A''R'</span></span><br><span class=\"line\">\t<span class=\"comment\">//测试网</span></span><br><span class=\"line\">\tTestNetBitcoinNet=<span class=\"number\">0x544e5652</span><span class=\"comment\">//'T''N''V''R'</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">        pchMessageStart[<span class=\"number\">0</span>] = <span class=\"number\">0x52</span>; <span class=\"comment\">// R</span></span><br><span class=\"line\">        pchMessageStart[<span class=\"number\">1</span>] = <span class=\"number\">0x41</span>; <span class=\"comment\">// A</span></span><br><span class=\"line\">        pchMessageStart[<span class=\"number\">2</span>] = <span class=\"number\">0x56</span>; <span class=\"comment\">// V</span></span><br><span class=\"line\">        pchMessageStart[<span class=\"number\">3</span>] = <span class=\"number\">0x4e</span>; <span class=\"comment\">// N</span></span><br><span class=\"line\">        nDefaultPort = <span class=\"number\">8767</span>;</span><br><span class=\"line\">        nPruneAfterHeight = <span class=\"number\">100000</span>;</span><br><span class=\"line\">        genesis = CreateGenesisBlock(<span class=\"number\">1514999494</span>, <span class=\"number\">25023712</span>, <span class=\"number\">0x1e00ffff</span>, <span class=\"number\">4</span>, <span class=\"number\">5000</span> * COIN);</span><br><span class=\"line\">        consensus.hashGenesisBlock = genesis.GetX16RHash();</span><br><span class=\"line\">        assert(consensus.hashGenesisBlock == uint256S(<span class=\"string\">\"0000006b444bc2f2ffe627be9d9e7e7a0730000870ef6eb6da46c8eae389df90\"</span>));</span><br><span class=\"line\">        assert(genesis.hashMerkleRoot == uint256S(<span class=\"string\">\"28ff00a867739a352523808d301f504bc4547699398d70faf2266a8bae5f3516\"</span>));</span><br><span class=\"line\">        vSeeds.emplace_back(<span class=\"string\">\"seed-raven.bitactivate.com\"</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        vSeeds.emplace_back(<span class=\"string\">\"seed-raven.ravencoin.com\"</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        vSeeds.emplace_back(<span class=\"string\">\"seed-raven.ravencoin.org\"</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        base58Prefixes[PUBKEY_ADDRESS] = <span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span>&gt;(<span class=\"number\">1</span>,<span class=\"number\">60</span>);</span><br><span class=\"line\">        base58Prefixes[SCRIPT_ADDRESS] = <span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span>&gt;(<span class=\"number\">1</span>,<span class=\"number\">122</span>);</span><br><span class=\"line\">        base58Prefixes[SECRET_KEY] =     <span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span>&gt;(<span class=\"number\">1</span>,<span class=\"number\">128</span>);</span><br><span class=\"line\">        base58Prefixes[EXT_PUBLIC_KEY] = &#123;<span class=\"number\">0x04</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xB2</span>, <span class=\"number\">0x1E</span>&#125;;</span><br><span class=\"line\">        base58Prefixes[EXT_SECRET_KEY] = &#123;<span class=\"number\">0x04</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xAD</span>, <span class=\"number\">0xE4</span>&#125;;</span><br><span class=\"line\">        vFixedSeeds = <span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;SeedSpec6&gt;(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));</span><br><span class=\"line\">        fDefaultConsistencyChecks = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        fRequireStandard = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        fMineBlocksOnDemand = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        fMiningRequiresPeers = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        checkpointData = (CCheckpointData) &#123;</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                &#123; <span class=\"number\">535721</span>, uint256S(<span class=\"string\">\"0x000000000001217f58a594ca742c8635ecaaaf695d1a63f6ab06979f1c159e04\"</span>)&#125;,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        chainTxData = ChainTxData&#123;</span><br><span class=\"line\">            <span class=\"comment\">// Update as we know more about the contents of the Raven chain</span></span><br><span class=\"line\">            <span class=\"comment\">// Stats as of 000000000000a72545994ce72b25042ea63707fca169ca4deb7f9dab4f1b1798 window size 43200</span></span><br><span class=\"line\">            <span class=\"number\">1543817453</span>, <span class=\"comment\">// * UNIX timestamp of last known number of transactions</span></span><br><span class=\"line\">            <span class=\"number\">2033711</span>,    <span class=\"comment\">// * total number of transactions between genesis and that timestamp</span></span><br><span class=\"line\">                        <span class=\"comment\">//   (the tx=... number in the SetBestChain debug.log lines)</span></span><br><span class=\"line\">            <span class=\"number\">0.1</span>         <span class=\"comment\">// * estimated number of transactions per second after that timestamp</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"comment\">/** RVN Start **/</span></span><br><span class=\"line\">        <span class=\"comment\">// Burn Amounts</span></span><br><span class=\"line\">        nIssueAssetBurnAmount = <span class=\"number\">500</span> * COIN;</span><br><span class=\"line\">        nReissueAssetBurnAmount = <span class=\"number\">100</span> * COIN;</span><br><span class=\"line\">        nIssueSubAssetBurnAmount = <span class=\"number\">100</span> * COIN;</span><br><span class=\"line\">        nIssueUniqueAssetBurnAmount = <span class=\"number\">5</span> * COIN;</span><br><span class=\"line\">        <span class=\"comment\">// Burn Addresses</span></span><br><span class=\"line\">        strIssueAssetBurnAddress = <span class=\"string\">\"RXissueAssetXXXXXXXXXXXXXXXXXhhZGt\"</span>;</span><br><span class=\"line\">        strReissueAssetBurnAddress = <span class=\"string\">\"RXReissueAssetXXXXXXXXXXXXXXVEFAWu\"</span>;</span><br><span class=\"line\">        strIssueSubAssetBurnAddress = <span class=\"string\">\"RXissueSubAssetXXXXXXXXXXXXXWcwhwL\"</span>;</span><br><span class=\"line\">        strIssueUniqueAssetBurnAddress = <span class=\"string\">\"RXissueUniqueAssetXXXXXXXXXXWEAe58\"</span>;</span><br><span class=\"line\">        <span class=\"comment\">//Global Burn Address</span></span><br><span class=\"line\">        strGlobalBurnAddress = <span class=\"string\">\"RXBurnXXXXXXXXXXXXXXXXXXXXXXWUo9FV\"</span>;</span><br><span class=\"line\">        <span class=\"comment\">// DGW Activation</span></span><br><span class=\"line\">        nDGWActivationBlock = <span class=\"number\">338778</span>;</span><br><span class=\"line\">        nX16RV2ActivationTime = <span class=\"number\">1569945600</span>; <span class=\"comment\">//Tue Oct 01 2019 16:00:00 UTC</span></span><br><span class=\"line\">        nMaxReorganizationDepth = <span class=\"number\">60</span>; <span class=\"comment\">// 60 at 1 minute block timespan is +/- 60 minutes.</span></span><br><span class=\"line\">        nMinReorganizationPeers = <span class=\"number\">4</span>;</span><br><span class=\"line\">        nMinReorganizationAge = <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">12</span>; <span class=\"comment\">// 12 hours</span></span><br><span class=\"line\">        <span class=\"comment\">/** RVN End **/</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Version.h</span></span><br><span class=\"line\"><span class=\"comment\">//当前版本号为 70025</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> PROTOCOL_VERSION = <span class=\"number\">70025</span>;</span><br><span class=\"line\"><span class=\"comment\">//! initial proto version, to be increased after version/verack negotiation</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> INIT_PROTO_VERSION = <span class=\"number\">209</span>;</span><br><span class=\"line\"><span class=\"comment\">//! In this version, 'getheaders' was introduced.</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> GETHEADERS_VERSION = <span class=\"number\">31800</span>;</span><br><span class=\"line\"><span class=\"comment\">//! assetdata network request is allowed for this version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> ASSETDATA_VERSION = <span class=\"number\">70017</span>;</span><br><span class=\"line\"><span class=\"comment\">//! disconnect from peers older than this proto version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MIN_PEER_PROTO_VERSION = ASSETDATA_VERSION;</span><br><span class=\"line\"><span class=\"comment\">//! nTime field added to CAddress, starting with this version;</span></span><br><span class=\"line\"><span class=\"comment\">//! if possible, avoid requesting addresses nodes older than this</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> CADDR_TIME_VERSION = <span class=\"number\">31402</span>;</span><br><span class=\"line\"><span class=\"comment\">//! BIP 0031, pong message, is enabled for all versions AFTER this one</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> BIP0031_VERSION = <span class=\"number\">60000</span>;</span><br><span class=\"line\"><span class=\"comment\">//! \"filter*\" commands are disabled without NODE_BLOOM after and including this version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> NO_BLOOM_VERSION = <span class=\"number\">70011</span>;</span><br><span class=\"line\"><span class=\"comment\">//! \"sendheaders\" command and announcing blocks with headers starts with this version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> SENDHEADERS_VERSION = <span class=\"number\">70012</span>;</span><br><span class=\"line\"><span class=\"comment\">//! \"feefilter\" tells peers to filter invs to you by fee starts with this version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> FEEFILTER_VERSION = <span class=\"number\">70013</span>;</span><br><span class=\"line\"><span class=\"comment\">//! short-id-based block download starts with this version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> SHORT_IDS_BLOCKS_VERSION = <span class=\"number\">70014</span>;</span><br><span class=\"line\"><span class=\"comment\">//! not banning for invalid compact blocks starts with this version</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> INVALID_CB_NO_BAN_VERSION = <span class=\"number\">70015</span>;</span><br><span class=\"line\"><span class=\"comment\">//! getassetdata reutrn asstnotfound, and assetdata doesn't have blockhash in the data</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> ASSETDATA_VERSION_UPDATED = <span class=\"number\">70020</span>;</span><br><span class=\"line\"><span class=\"comment\">//! getassetdata reutrn asstnotfound, and assetdata doesn't have blockhash in the data</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> X16RV2_VERSION = <span class=\"number\">70025</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"难度调整代码\"><a href=\"#难度调整代码\" class=\"headerlink\" title=\"难度调整代码\"></a>难度调整代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pow.cpp</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> <span class=\"keyword\">static</span> <span class=\"title\">DarkGravityWave</span><span class=\"params\">(<span class=\"keyword\">const</span> CBlockIndex* pindexLast, <span class=\"keyword\">const</span> CBlockHeader *pblock, <span class=\"keyword\">const</span> Consensus::ConsensusParams&amp; params)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* current difficulty formula, dash - DarkGravity v3, written by Evan Duffield - evan@dash.org */</span></span><br><span class=\"line\">    assert(pindexLast != <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> nProofOfWorkLimit = UintToArith256(params.powLimit).GetCompact();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arith_uint256 bnPowLimit = UintToArith256(params.powLimit);</span><br><span class=\"line\">    <span class=\"keyword\">int64_t</span> nPastBlocks = <span class=\"number\">180</span>; <span class=\"comment\">// ~3hr</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// make sure we have at least (nPastBlocks + 1) blocks, otherwise just return powLimit</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!pindexLast || pindexLast-&gt;nHeight &lt; nPastBlocks) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bnPowLimit.GetCompact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (params.fPowAllowMinDifficultyBlocks &amp;&amp; params.fPowNoRetargeting) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Special difficulty rule:</span></span><br><span class=\"line\">        <span class=\"comment\">// If the new block's timestamp is more than 2 * 1 minutes</span></span><br><span class=\"line\">        <span class=\"comment\">// then allow mining of a min-difficulty block.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pblock-&gt;GetBlockTime() &gt; pindexLast-&gt;GetBlockTime() + params.nPowTargetSpacing * <span class=\"number\">2</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> nProofOfWorkLimit;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Return the last non-special-min-difficulty-rules-block</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> CBlockIndex *pindex = pindexLast;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (pindex-&gt;pprev &amp;&amp; pindex-&gt;nHeight % params.DifficultyAdjustmentInterval() != <span class=\"number\">0</span> &amp;&amp;</span><br><span class=\"line\">                   pindex-&gt;nBits == nProofOfWorkLimit)</span><br><span class=\"line\">                pindex = pindex-&gt;pprev;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> pindex-&gt;nBits;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> CBlockIndex *pindex = pindexLast;</span><br><span class=\"line\">    arith_uint256 bnPastTargetAvg;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> nCountBlocks = <span class=\"number\">1</span>; nCountBlocks &lt;= nPastBlocks; nCountBlocks++) &#123;</span><br><span class=\"line\">        arith_uint256 bnTarget = arith_uint256().SetCompact(pindex-&gt;nBits);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nCountBlocks == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            bnPastTargetAvg = bnTarget;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> that's not an average really...</span></span><br><span class=\"line\">            bnPastTargetAvg = (bnPastTargetAvg * nCountBlocks + bnTarget) / (nCountBlocks + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nCountBlocks != nPastBlocks) &#123;</span><br><span class=\"line\">            assert(pindex-&gt;pprev); <span class=\"comment\">// should never fail</span></span><br><span class=\"line\">            pindex = pindex-&gt;pprev;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">arith_uint256 <span class=\"title\">bnNew</span><span class=\"params\">(bnPastTargetAvg)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int64_t</span> nActualTimespan = pindexLast-&gt;GetBlockTime() - pindex-&gt;GetBlockTime();</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> is this accurate? nActualTimespan counts it for (nPastBlocks - 1) blocks only...</span></span><br><span class=\"line\">    <span class=\"keyword\">int64_t</span> nTargetTimespan = nPastBlocks * params.nPowTargetSpacing;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nActualTimespan &lt; nTargetTimespan/<span class=\"number\">3</span>)</span><br><span class=\"line\">        nActualTimespan = nTargetTimespan/<span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nActualTimespan &gt; nTargetTimespan*<span class=\"number\">3</span>)</span><br><span class=\"line\">        nActualTimespan = nTargetTimespan*<span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Retarget</span></span><br><span class=\"line\">    bnNew *= nActualTimespan;</span><br><span class=\"line\">    bnNew /= nTargetTimespan;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (bnNew &gt; bnPowLimit) &#123;</span><br><span class=\"line\">        bnNew = bnPowLimit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> bnNew.GetCompact();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2019-12-13T06:13:06.851Z","updated":"2019-12-13T06:13:06.851Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck47xgjog0002i6s65abdaqr9","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"framework","_content":"\n# 构架思考\n\n```flowchart\nst=>start: Start:>http://www.google.com[blank]\ne=>end:>http://www.google.com\nop1=>operation: My Operation\nsub1=>subroutine: My Subroutine\ncond=>condition: Yes\nor No?:>http://www.google.com\nio=>inputoutput: catch something...\n\nst->op1->cond\ncond(yes)->io->e\ncond(no)->sub1(right)->op1\n```\n\n```sequence\nTitle: Here is a title\nA->B: Normal line\nB-->C: Dashed line\nC->>D: Open arrow\nD-->>A: Dashed open arrow\n```\n\n","source":"_posts/framework.md","raw":"----\ntitle: framework\n----\n\n# 构架思考\n\n```flowchart\nst=>start: Start:>http://www.google.com[blank]\ne=>end:>http://www.google.com\nop1=>operation: My Operation\nsub1=>subroutine: My Subroutine\ncond=>condition: Yes\nor No?:>http://www.google.com\nio=>inputoutput: catch something...\n\nst->op1->cond\ncond(yes)->io->e\ncond(no)->sub1(right)->op1\n```\n\n```sequence\nTitle: Here is a title\nA->B: Normal line\nB-->C: Dashed line\nC->>D: Open arrow\nD-->>A: Dashed open arrow\n```\n\n","slug":"framework","published":1,"date":"2019-12-13T07:41:59.484Z","updated":"2019-12-13T07:43:39.342Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck47xgjok0004i6s6d3adbv3e","content":"<h1 id=\"构架思考\"><a href=\"#构架思考\" class=\"headerlink\" title=\"构架思考\"></a>构架思考</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st&#x3D;&gt;start: Start:&gt;http:&#x2F;&#x2F;www.google.com[blank]</span><br><span class=\"line\">e&#x3D;&gt;end:&gt;http:&#x2F;&#x2F;www.google.com</span><br><span class=\"line\">op1&#x3D;&gt;operation: My Operation</span><br><span class=\"line\">sub1&#x3D;&gt;subroutine: My Subroutine</span><br><span class=\"line\">cond&#x3D;&gt;condition: Yes</span><br><span class=\"line\">or No?:&gt;http:&#x2F;&#x2F;www.google.com</span><br><span class=\"line\">io&#x3D;&gt;inputoutput: catch something...</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;op1-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;io-&gt;e</span><br><span class=\"line\">cond(no)-&gt;sub1(right)-&gt;op1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Title: Here is a title</span><br><span class=\"line\">A-&gt;B: Normal line</span><br><span class=\"line\">B--&gt;C: Dashed line</span><br><span class=\"line\">C-&gt;&gt;D: Open arrow</span><br><span class=\"line\">D--&gt;&gt;A: Dashed open arrow</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"构架思考\"><a href=\"#构架思考\" class=\"headerlink\" title=\"构架思考\"></a>构架思考</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st&#x3D;&gt;start: Start:&gt;http:&#x2F;&#x2F;www.google.com[blank]</span><br><span class=\"line\">e&#x3D;&gt;end:&gt;http:&#x2F;&#x2F;www.google.com</span><br><span class=\"line\">op1&#x3D;&gt;operation: My Operation</span><br><span class=\"line\">sub1&#x3D;&gt;subroutine: My Subroutine</span><br><span class=\"line\">cond&#x3D;&gt;condition: Yes</span><br><span class=\"line\">or No?:&gt;http:&#x2F;&#x2F;www.google.com</span><br><span class=\"line\">io&#x3D;&gt;inputoutput: catch something...</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;op1-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;io-&gt;e</span><br><span class=\"line\">cond(no)-&gt;sub1(right)-&gt;op1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Title: Here is a title</span><br><span class=\"line\">A-&gt;B: Normal line</span><br><span class=\"line\">B--&gt;C: Dashed line</span><br><span class=\"line\">C-&gt;&gt;D: Open arrow</span><br><span class=\"line\">D--&gt;&gt;A: Dashed open arrow</span><br></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ck47xgjod0001i6s62d3ccga7","tag_id":"ck47xgjoh0003i6s6b8q0dxgv","_id":"ck47xgjoo0006i6s65wgj3d02"},{"post_id":"ck47xgjod0001i6s62d3ccga7","tag_id":"ck47xgjon0005i6s6da3qe29p","_id":"ck47xgjoo0007i6s66tqt6y33"}],"Tag":[{"name":"blockchain","_id":"ck47xgjoh0003i6s6b8q0dxgv"},{"name":"cryptocoin","_id":"ck47xgjon0005i6s6da3qe29p"}]}}